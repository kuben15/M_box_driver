ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_TIM_Base_MspInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_TIM_Base_MspInit:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2022 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim1;
  28:Core/Src/tim.c **** TIM_HandleTypeDef htim20;
  29:Core/Src/tim.c **** 
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 2


  30:Core/Src/tim.c **** /* TIM1 init function */
  31:Core/Src/tim.c **** void MX_TIM1_Init(void)
  32:Core/Src/tim.c **** {
  33:Core/Src/tim.c **** 
  34:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 0 */
  35:Core/Src/tim.c **** 
  36:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 0 */
  37:Core/Src/tim.c **** 
  38:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  39:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  40:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  41:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  42:Core/Src/tim.c **** 
  43:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 1 */
  44:Core/Src/tim.c **** 
  45:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 1 */
  46:Core/Src/tim.c ****   htim1.Instance = TIM1;
  47:Core/Src/tim.c ****   htim1.Init.Prescaler = 1;
  48:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  49:Core/Src/tim.c ****   htim1.Init.Period = 4999;
  50:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  51:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
  52:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
  53:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  54:Core/Src/tim.c ****   {
  55:Core/Src/tim.c ****     Error_Handler();
  56:Core/Src/tim.c ****   }
  57:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  58:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  59:Core/Src/tim.c ****   {
  60:Core/Src/tim.c ****     Error_Handler();
  61:Core/Src/tim.c ****   }
  62:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  63:Core/Src/tim.c ****   {
  64:Core/Src/tim.c ****     Error_Handler();
  65:Core/Src/tim.c ****   }
  66:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  67:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
  68:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  69:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  70:Core/Src/tim.c ****   {
  71:Core/Src/tim.c ****     Error_Handler();
  72:Core/Src/tim.c ****   }
  73:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  74:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
  75:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  76:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  77:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  78:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  79:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  80:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
  81:Core/Src/tim.c ****   {
  82:Core/Src/tim.c ****     Error_Handler();
  83:Core/Src/tim.c ****   }
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 3


  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
  92:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
  93:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
  94:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
  95:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
  96:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  97:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  98:Core/Src/tim.c ****   {
  99:Core/Src/tim.c ****     Error_Handler();
 100:Core/Src/tim.c ****   }
 101:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 102:Core/Src/tim.c **** 
 103:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 2 */
 104:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim1);
 105:Core/Src/tim.c **** 
 106:Core/Src/tim.c **** }
 107:Core/Src/tim.c **** /* TIM20 init function */
 108:Core/Src/tim.c **** void MX_TIM20_Init(void)
 109:Core/Src/tim.c **** {
 110:Core/Src/tim.c **** 
 111:Core/Src/tim.c ****   /* USER CODE BEGIN TIM20_Init 0 */
 112:Core/Src/tim.c **** 
 113:Core/Src/tim.c ****   /* USER CODE END TIM20_Init 0 */
 114:Core/Src/tim.c **** 
 115:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 116:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 117:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 118:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 119:Core/Src/tim.c **** 
 120:Core/Src/tim.c ****   /* USER CODE BEGIN TIM20_Init 1 */
 121:Core/Src/tim.c **** 
 122:Core/Src/tim.c ****   /* USER CODE END TIM20_Init 1 */
 123:Core/Src/tim.c ****   htim20.Instance = TIM20;
 124:Core/Src/tim.c ****   htim20.Init.Prescaler = 1;
 125:Core/Src/tim.c ****   htim20.Init.CounterMode = TIM_COUNTERMODE_UP;
 126:Core/Src/tim.c ****   htim20.Init.Period = 4999;
 127:Core/Src/tim.c ****   htim20.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 128:Core/Src/tim.c ****   htim20.Init.RepetitionCounter = 0;
 129:Core/Src/tim.c ****   htim20.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 130:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim20) != HAL_OK)
 131:Core/Src/tim.c ****   {
 132:Core/Src/tim.c ****     Error_Handler();
 133:Core/Src/tim.c ****   }
 134:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 135:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim20, &sClockSourceConfig) != HAL_OK)
 136:Core/Src/tim.c ****   {
 137:Core/Src/tim.c ****     Error_Handler();
 138:Core/Src/tim.c ****   }
 139:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim20) != HAL_OK)
 140:Core/Src/tim.c ****   {
 141:Core/Src/tim.c ****     Error_Handler();
 142:Core/Src/tim.c ****   }
 143:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 4


 144:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 145:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 146:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim20, &sMasterConfig) != HAL_OK)
 147:Core/Src/tim.c ****   {
 148:Core/Src/tim.c ****     Error_Handler();
 149:Core/Src/tim.c ****   }
 150:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 151:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 152:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 153:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 154:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 155:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 156:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 157:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim20, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 158:Core/Src/tim.c ****   {
 159:Core/Src/tim.c ****     Error_Handler();
 160:Core/Src/tim.c ****   }
 161:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 162:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 163:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 164:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 165:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 166:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 167:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 168:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 169:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 170:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 171:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 172:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 173:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 174:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim20, &sBreakDeadTimeConfig) != HAL_OK)
 175:Core/Src/tim.c ****   {
 176:Core/Src/tim.c ****     Error_Handler();
 177:Core/Src/tim.c ****   }
 178:Core/Src/tim.c ****   /* USER CODE BEGIN TIM20_Init 2 */
 179:Core/Src/tim.c **** 
 180:Core/Src/tim.c ****   /* USER CODE END TIM20_Init 2 */
 181:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim20);
 182:Core/Src/tim.c **** 
 183:Core/Src/tim.c **** }
 184:Core/Src/tim.c **** 
 185:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 186:Core/Src/tim.c **** {
  30              		.loc 1 186 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 186 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
 187:Core/Src/tim.c **** 
 188:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 5


  42              		.loc 1 188 3 is_stmt 1 view .LVU2
  43              		.loc 1 188 20 is_stmt 0 view .LVU3
  44 0004 0368     		ldr	r3, [r0]
  45              		.loc 1 188 5 view .LVU4
  46 0006 174A     		ldr	r2, .L7
  47 0008 9342     		cmp	r3, r2
  48 000a 05D0     		beq	.L5
 189:Core/Src/tim.c ****   {
 190:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 191:Core/Src/tim.c **** 
 192:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
 193:Core/Src/tim.c ****     /* TIM1 clock enable */
 194:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 195:Core/Src/tim.c **** 
 196:Core/Src/tim.c ****     /* TIM1 interrupt Init */
 197:Core/Src/tim.c ****     HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM17_IRQn, 0, 0);
 198:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 199:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 200:Core/Src/tim.c **** 
 201:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
 202:Core/Src/tim.c ****   }
 203:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM20)
  49              		.loc 1 203 8 is_stmt 1 view .LVU5
  50              		.loc 1 203 10 is_stmt 0 view .LVU6
  51 000c 164A     		ldr	r2, .L7+4
  52 000e 9342     		cmp	r3, r2
  53 0010 15D0     		beq	.L6
  54              	.LVL1:
  55              	.L1:
 204:Core/Src/tim.c ****   {
 205:Core/Src/tim.c ****   /* USER CODE BEGIN TIM20_MspInit 0 */
 206:Core/Src/tim.c **** 
 207:Core/Src/tim.c ****   /* USER CODE END TIM20_MspInit 0 */
 208:Core/Src/tim.c ****     /* TIM20 clock enable */
 209:Core/Src/tim.c ****     __HAL_RCC_TIM20_CLK_ENABLE();
 210:Core/Src/tim.c **** 
 211:Core/Src/tim.c ****     /* TIM20 interrupt Init */
 212:Core/Src/tim.c ****     HAL_NVIC_SetPriority(TIM20_TRG_COM_IRQn, 0, 0);
 213:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM20_TRG_COM_IRQn);
 214:Core/Src/tim.c ****   /* USER CODE BEGIN TIM20_MspInit 1 */
 215:Core/Src/tim.c **** 
 216:Core/Src/tim.c ****   /* USER CODE END TIM20_MspInit 1 */
 217:Core/Src/tim.c ****   }
 218:Core/Src/tim.c **** }
  56              		.loc 1 218 1 view .LVU7
  57 0012 03B0     		add	sp, sp, #12
  58              	.LCFI2:
  59              		.cfi_remember_state
  60              		.cfi_def_cfa_offset 4
  61              		@ sp needed
  62 0014 5DF804FB 		ldr	pc, [sp], #4
  63              	.LVL2:
  64              	.L5:
  65              	.LCFI3:
  66              		.cfi_restore_state
 194:Core/Src/tim.c **** 
  67              		.loc 1 194 5 is_stmt 1 view .LVU8
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 6


  68              	.LBB2:
 194:Core/Src/tim.c **** 
  69              		.loc 1 194 5 view .LVU9
 194:Core/Src/tim.c **** 
  70              		.loc 1 194 5 view .LVU10
  71 0018 144B     		ldr	r3, .L7+8
  72 001a 1A6E     		ldr	r2, [r3, #96]
  73 001c 42F40062 		orr	r2, r2, #2048
  74 0020 1A66     		str	r2, [r3, #96]
 194:Core/Src/tim.c **** 
  75              		.loc 1 194 5 view .LVU11
  76 0022 1B6E     		ldr	r3, [r3, #96]
  77 0024 03F40063 		and	r3, r3, #2048
  78 0028 0093     		str	r3, [sp]
 194:Core/Src/tim.c **** 
  79              		.loc 1 194 5 view .LVU12
  80 002a 009B     		ldr	r3, [sp]
  81              	.LBE2:
 194:Core/Src/tim.c **** 
  82              		.loc 1 194 5 view .LVU13
 197:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
  83              		.loc 1 197 5 view .LVU14
  84 002c 0022     		movs	r2, #0
  85 002e 1146     		mov	r1, r2
  86 0030 1A20     		movs	r0, #26
  87              	.LVL3:
 197:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
  88              		.loc 1 197 5 is_stmt 0 view .LVU15
  89 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  90              	.LVL4:
 198:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  91              		.loc 1 198 5 is_stmt 1 view .LVU16
  92 0036 1A20     		movs	r0, #26
  93 0038 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  94              	.LVL5:
  95 003c E9E7     		b	.L1
  96              	.LVL6:
  97              	.L6:
 209:Core/Src/tim.c **** 
  98              		.loc 1 209 5 view .LVU17
  99              	.LBB3:
 209:Core/Src/tim.c **** 
 100              		.loc 1 209 5 view .LVU18
 209:Core/Src/tim.c **** 
 101              		.loc 1 209 5 view .LVU19
 102 003e 0B4B     		ldr	r3, .L7+8
 103 0040 1A6E     		ldr	r2, [r3, #96]
 104 0042 42F48012 		orr	r2, r2, #1048576
 105 0046 1A66     		str	r2, [r3, #96]
 209:Core/Src/tim.c **** 
 106              		.loc 1 209 5 view .LVU20
 107 0048 1B6E     		ldr	r3, [r3, #96]
 108 004a 03F48013 		and	r3, r3, #1048576
 109 004e 0193     		str	r3, [sp, #4]
 209:Core/Src/tim.c **** 
 110              		.loc 1 209 5 view .LVU21
 111 0050 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 7


 112              	.LBE3:
 209:Core/Src/tim.c **** 
 113              		.loc 1 209 5 view .LVU22
 212:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM20_TRG_COM_IRQn);
 114              		.loc 1 212 5 view .LVU23
 115 0052 0022     		movs	r2, #0
 116 0054 1146     		mov	r1, r2
 117 0056 4F20     		movs	r0, #79
 118              	.LVL7:
 212:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM20_TRG_COM_IRQn);
 119              		.loc 1 212 5 is_stmt 0 view .LVU24
 120 0058 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 121              	.LVL8:
 213:Core/Src/tim.c ****   /* USER CODE BEGIN TIM20_MspInit 1 */
 122              		.loc 1 213 5 is_stmt 1 view .LVU25
 123 005c 4F20     		movs	r0, #79
 124 005e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 125              	.LVL9:
 126              		.loc 1 218 1 is_stmt 0 view .LVU26
 127 0062 D6E7     		b	.L1
 128              	.L8:
 129              		.align	2
 130              	.L7:
 131 0064 002C0140 		.word	1073818624
 132 0068 00500140 		.word	1073827840
 133 006c 00100240 		.word	1073876992
 134              		.cfi_endproc
 135              	.LFE134:
 137              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 138              		.align	1
 139              		.global	HAL_TIM_MspPostInit
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 144              	HAL_TIM_MspPostInit:
 145              	.LVL10:
 146              	.LFB135:
 219:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 220:Core/Src/tim.c **** {
 147              		.loc 1 220 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 32
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		.loc 1 220 1 is_stmt 0 view .LVU28
 152 0000 00B5     		push	{lr}
 153              	.LCFI4:
 154              		.cfi_def_cfa_offset 4
 155              		.cfi_offset 14, -4
 156 0002 89B0     		sub	sp, sp, #36
 157              	.LCFI5:
 158              		.cfi_def_cfa_offset 40
 221:Core/Src/tim.c **** 
 222:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 159              		.loc 1 222 3 is_stmt 1 view .LVU29
 160              		.loc 1 222 20 is_stmt 0 view .LVU30
 161 0004 0023     		movs	r3, #0
 162 0006 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 8


 163 0008 0493     		str	r3, [sp, #16]
 164 000a 0593     		str	r3, [sp, #20]
 165 000c 0693     		str	r3, [sp, #24]
 166 000e 0793     		str	r3, [sp, #28]
 223:Core/Src/tim.c ****   if(timHandle->Instance==TIM1)
 167              		.loc 1 223 3 is_stmt 1 view .LVU31
 168              		.loc 1 223 15 is_stmt 0 view .LVU32
 169 0010 0368     		ldr	r3, [r0]
 170              		.loc 1 223 5 view .LVU33
 171 0012 1A4A     		ldr	r2, .L15
 172 0014 9342     		cmp	r3, r2
 173 0016 05D0     		beq	.L13
 224:Core/Src/tim.c ****   {
 225:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 226:Core/Src/tim.c **** 
 227:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 0 */
 228:Core/Src/tim.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 229:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 230:Core/Src/tim.c ****     PA9     ------> TIM1_CH2
 231:Core/Src/tim.c ****     */
 232:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
 233:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 234:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 235:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 236:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF6_TIM1;
 237:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 238:Core/Src/tim.c **** 
 239:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 240:Core/Src/tim.c **** 
 241:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 1 */
 242:Core/Src/tim.c ****   }
 243:Core/Src/tim.c ****   else if(timHandle->Instance==TIM20)
 174              		.loc 1 243 8 is_stmt 1 view .LVU34
 175              		.loc 1 243 10 is_stmt 0 view .LVU35
 176 0018 194A     		ldr	r2, .L15+4
 177 001a 9342     		cmp	r3, r2
 178 001c 19D0     		beq	.L14
 179              	.LVL11:
 180              	.L9:
 244:Core/Src/tim.c ****   {
 245:Core/Src/tim.c ****   /* USER CODE BEGIN TIM20_MspPostInit 0 */
 246:Core/Src/tim.c **** 
 247:Core/Src/tim.c ****   /* USER CODE END TIM20_MspPostInit 0 */
 248:Core/Src/tim.c **** 
 249:Core/Src/tim.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 250:Core/Src/tim.c ****     /**TIM20 GPIO Configuration
 251:Core/Src/tim.c ****     PB2     ------> TIM20_CH1
 252:Core/Src/tim.c ****     */
 253:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_2;
 254:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 255:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 256:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 257:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF3_TIM20;
 258:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 259:Core/Src/tim.c **** 
 260:Core/Src/tim.c ****   /* USER CODE BEGIN TIM20_MspPostInit 1 */
 261:Core/Src/tim.c **** 
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 9


 262:Core/Src/tim.c ****   /* USER CODE END TIM20_MspPostInit 1 */
 263:Core/Src/tim.c ****   }
 264:Core/Src/tim.c **** 
 265:Core/Src/tim.c **** }
 181              		.loc 1 265 1 view .LVU36
 182 001e 09B0     		add	sp, sp, #36
 183              	.LCFI6:
 184              		.cfi_remember_state
 185              		.cfi_def_cfa_offset 4
 186              		@ sp needed
 187 0020 5DF804FB 		ldr	pc, [sp], #4
 188              	.LVL12:
 189              	.L13:
 190              	.LCFI7:
 191              		.cfi_restore_state
 228:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 192              		.loc 1 228 5 is_stmt 1 view .LVU37
 193              	.LBB4:
 228:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 194              		.loc 1 228 5 view .LVU38
 228:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 195              		.loc 1 228 5 view .LVU39
 196 0024 174B     		ldr	r3, .L15+8
 197 0026 DA6C     		ldr	r2, [r3, #76]
 198 0028 42F00102 		orr	r2, r2, #1
 199 002c DA64     		str	r2, [r3, #76]
 228:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 200              		.loc 1 228 5 view .LVU40
 201 002e DB6C     		ldr	r3, [r3, #76]
 202 0030 03F00103 		and	r3, r3, #1
 203 0034 0193     		str	r3, [sp, #4]
 228:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 204              		.loc 1 228 5 view .LVU41
 205 0036 019B     		ldr	r3, [sp, #4]
 206              	.LBE4:
 228:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 207              		.loc 1 228 5 view .LVU42
 232:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 208              		.loc 1 232 5 view .LVU43
 232:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 209              		.loc 1 232 25 is_stmt 0 view .LVU44
 210 0038 4FF40073 		mov	r3, #512
 211 003c 0393     		str	r3, [sp, #12]
 233:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 212              		.loc 1 233 5 is_stmt 1 view .LVU45
 233:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 213              		.loc 1 233 26 is_stmt 0 view .LVU46
 214 003e 0223     		movs	r3, #2
 215 0040 0493     		str	r3, [sp, #16]
 234:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 216              		.loc 1 234 5 is_stmt 1 view .LVU47
 235:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF6_TIM1;
 217              		.loc 1 235 5 view .LVU48
 236:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 218              		.loc 1 236 5 view .LVU49
 236:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 219              		.loc 1 236 31 is_stmt 0 view .LVU50
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 10


 220 0042 0623     		movs	r3, #6
 221 0044 0793     		str	r3, [sp, #28]
 237:Core/Src/tim.c **** 
 222              		.loc 1 237 5 is_stmt 1 view .LVU51
 223 0046 03A9     		add	r1, sp, #12
 224 0048 4FF09040 		mov	r0, #1207959552
 225              	.LVL13:
 237:Core/Src/tim.c **** 
 226              		.loc 1 237 5 is_stmt 0 view .LVU52
 227 004c FFF7FEFF 		bl	HAL_GPIO_Init
 228              	.LVL14:
 229 0050 E5E7     		b	.L9
 230              	.LVL15:
 231              	.L14:
 249:Core/Src/tim.c ****     /**TIM20 GPIO Configuration
 232              		.loc 1 249 5 is_stmt 1 view .LVU53
 233              	.LBB5:
 249:Core/Src/tim.c ****     /**TIM20 GPIO Configuration
 234              		.loc 1 249 5 view .LVU54
 249:Core/Src/tim.c ****     /**TIM20 GPIO Configuration
 235              		.loc 1 249 5 view .LVU55
 236 0052 0C4B     		ldr	r3, .L15+8
 237 0054 DA6C     		ldr	r2, [r3, #76]
 238 0056 42F00202 		orr	r2, r2, #2
 239 005a DA64     		str	r2, [r3, #76]
 249:Core/Src/tim.c ****     /**TIM20 GPIO Configuration
 240              		.loc 1 249 5 view .LVU56
 241 005c DB6C     		ldr	r3, [r3, #76]
 242 005e 03F00203 		and	r3, r3, #2
 243 0062 0293     		str	r3, [sp, #8]
 249:Core/Src/tim.c ****     /**TIM20 GPIO Configuration
 244              		.loc 1 249 5 view .LVU57
 245 0064 029B     		ldr	r3, [sp, #8]
 246              	.LBE5:
 249:Core/Src/tim.c ****     /**TIM20 GPIO Configuration
 247              		.loc 1 249 5 view .LVU58
 253:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 248              		.loc 1 253 5 view .LVU59
 253:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 249              		.loc 1 253 25 is_stmt 0 view .LVU60
 250 0066 0423     		movs	r3, #4
 251 0068 0393     		str	r3, [sp, #12]
 254:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 252              		.loc 1 254 5 is_stmt 1 view .LVU61
 254:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 253              		.loc 1 254 26 is_stmt 0 view .LVU62
 254 006a 0223     		movs	r3, #2
 255 006c 0493     		str	r3, [sp, #16]
 255:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 256              		.loc 1 255 5 is_stmt 1 view .LVU63
 256:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF3_TIM20;
 257              		.loc 1 256 5 view .LVU64
 257:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 258              		.loc 1 257 5 view .LVU65
 257:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 259              		.loc 1 257 31 is_stmt 0 view .LVU66
 260 006e 0323     		movs	r3, #3
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 11


 261 0070 0793     		str	r3, [sp, #28]
 258:Core/Src/tim.c **** 
 262              		.loc 1 258 5 is_stmt 1 view .LVU67
 263 0072 03A9     		add	r1, sp, #12
 264 0074 0448     		ldr	r0, .L15+12
 265              	.LVL16:
 258:Core/Src/tim.c **** 
 266              		.loc 1 258 5 is_stmt 0 view .LVU68
 267 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 268              	.LVL17:
 269              		.loc 1 265 1 view .LVU69
 270 007a D0E7     		b	.L9
 271              	.L16:
 272              		.align	2
 273              	.L15:
 274 007c 002C0140 		.word	1073818624
 275 0080 00500140 		.word	1073827840
 276 0084 00100240 		.word	1073876992
 277 0088 00040048 		.word	1207960576
 278              		.cfi_endproc
 279              	.LFE135:
 281              		.section	.text.MX_TIM1_Init,"ax",%progbits
 282              		.align	1
 283              		.global	MX_TIM1_Init
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 288              	MX_TIM1_Init:
 289              	.LFB132:
  32:Core/Src/tim.c **** 
 290              		.loc 1 32 1 is_stmt 1 view -0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 112
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294 0000 10B5     		push	{r4, lr}
 295              	.LCFI8:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 4, -8
 298              		.cfi_offset 14, -4
 299 0002 9CB0     		sub	sp, sp, #112
 300              	.LCFI9:
 301              		.cfi_def_cfa_offset 120
  38:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 302              		.loc 1 38 3 view .LVU71
  38:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 303              		.loc 1 38 26 is_stmt 0 view .LVU72
 304 0004 0024     		movs	r4, #0
 305 0006 1894     		str	r4, [sp, #96]
 306 0008 1994     		str	r4, [sp, #100]
 307 000a 1A94     		str	r4, [sp, #104]
 308 000c 1B94     		str	r4, [sp, #108]
  39:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 309              		.loc 1 39 3 is_stmt 1 view .LVU73
  39:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 310              		.loc 1 39 27 is_stmt 0 view .LVU74
 311 000e 1594     		str	r4, [sp, #84]
 312 0010 1694     		str	r4, [sp, #88]
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 12


 313 0012 1794     		str	r4, [sp, #92]
  40:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 314              		.loc 1 40 3 is_stmt 1 view .LVU75
  40:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 315              		.loc 1 40 22 is_stmt 0 view .LVU76
 316 0014 0E94     		str	r4, [sp, #56]
 317 0016 0F94     		str	r4, [sp, #60]
 318 0018 1094     		str	r4, [sp, #64]
 319 001a 1194     		str	r4, [sp, #68]
 320 001c 1294     		str	r4, [sp, #72]
 321 001e 1394     		str	r4, [sp, #76]
 322 0020 1494     		str	r4, [sp, #80]
  41:Core/Src/tim.c **** 
 323              		.loc 1 41 3 is_stmt 1 view .LVU77
  41:Core/Src/tim.c **** 
 324              		.loc 1 41 34 is_stmt 0 view .LVU78
 325 0022 3422     		movs	r2, #52
 326 0024 2146     		mov	r1, r4
 327 0026 01A8     		add	r0, sp, #4
 328 0028 FFF7FEFF 		bl	memset
 329              	.LVL18:
  46:Core/Src/tim.c ****   htim1.Init.Prescaler = 1;
 330              		.loc 1 46 3 is_stmt 1 view .LVU79
  46:Core/Src/tim.c ****   htim1.Init.Prescaler = 1;
 331              		.loc 1 46 18 is_stmt 0 view .LVU80
 332 002c 3248     		ldr	r0, .L31
 333 002e 334B     		ldr	r3, .L31+4
 334 0030 0360     		str	r3, [r0]
  47:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 335              		.loc 1 47 3 is_stmt 1 view .LVU81
  47:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 336              		.loc 1 47 24 is_stmt 0 view .LVU82
 337 0032 0123     		movs	r3, #1
 338 0034 4360     		str	r3, [r0, #4]
  48:Core/Src/tim.c ****   htim1.Init.Period = 4999;
 339              		.loc 1 48 3 is_stmt 1 view .LVU83
  48:Core/Src/tim.c ****   htim1.Init.Period = 4999;
 340              		.loc 1 48 26 is_stmt 0 view .LVU84
 341 0036 8460     		str	r4, [r0, #8]
  49:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 342              		.loc 1 49 3 is_stmt 1 view .LVU85
  49:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 343              		.loc 1 49 21 is_stmt 0 view .LVU86
 344 0038 41F28733 		movw	r3, #4999
 345 003c C360     		str	r3, [r0, #12]
  50:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 346              		.loc 1 50 3 is_stmt 1 view .LVU87
  50:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 347              		.loc 1 50 28 is_stmt 0 view .LVU88
 348 003e 0461     		str	r4, [r0, #16]
  51:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 349              		.loc 1 51 3 is_stmt 1 view .LVU89
  51:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 350              		.loc 1 51 32 is_stmt 0 view .LVU90
 351 0040 4461     		str	r4, [r0, #20]
  52:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 352              		.loc 1 52 3 is_stmt 1 view .LVU91
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 13


  52:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 353              		.loc 1 52 32 is_stmt 0 view .LVU92
 354 0042 8023     		movs	r3, #128
 355 0044 8361     		str	r3, [r0, #24]
  53:Core/Src/tim.c ****   {
 356              		.loc 1 53 3 is_stmt 1 view .LVU93
  53:Core/Src/tim.c ****   {
 357              		.loc 1 53 7 is_stmt 0 view .LVU94
 358 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 359              	.LVL19:
  53:Core/Src/tim.c ****   {
 360              		.loc 1 53 6 view .LVU95
 361 004a 0028     		cmp	r0, #0
 362 004c 42D1     		bne	.L25
 363              	.L18:
  57:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 364              		.loc 1 57 3 is_stmt 1 view .LVU96
  57:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 365              		.loc 1 57 34 is_stmt 0 view .LVU97
 366 004e 4FF48053 		mov	r3, #4096
 367 0052 1893     		str	r3, [sp, #96]
  58:Core/Src/tim.c ****   {
 368              		.loc 1 58 3 is_stmt 1 view .LVU98
  58:Core/Src/tim.c ****   {
 369              		.loc 1 58 7 is_stmt 0 view .LVU99
 370 0054 18A9     		add	r1, sp, #96
 371 0056 2848     		ldr	r0, .L31
 372 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 373              	.LVL20:
  58:Core/Src/tim.c ****   {
 374              		.loc 1 58 6 view .LVU100
 375 005c 0028     		cmp	r0, #0
 376 005e 3CD1     		bne	.L26
 377              	.L19:
  62:Core/Src/tim.c ****   {
 378              		.loc 1 62 3 is_stmt 1 view .LVU101
  62:Core/Src/tim.c ****   {
 379              		.loc 1 62 7 is_stmt 0 view .LVU102
 380 0060 2548     		ldr	r0, .L31
 381 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 382              	.LVL21:
  62:Core/Src/tim.c ****   {
 383              		.loc 1 62 6 view .LVU103
 384 0066 0028     		cmp	r0, #0
 385 0068 3AD1     		bne	.L27
 386              	.L20:
  66:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 387              		.loc 1 66 3 is_stmt 1 view .LVU104
  66:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 388              		.loc 1 66 37 is_stmt 0 view .LVU105
 389 006a 0023     		movs	r3, #0
 390 006c 1593     		str	r3, [sp, #84]
  67:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 391              		.loc 1 67 3 is_stmt 1 view .LVU106
  67:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 392              		.loc 1 67 38 is_stmt 0 view .LVU107
 393 006e 1693     		str	r3, [sp, #88]
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 14


  68:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 394              		.loc 1 68 3 is_stmt 1 view .LVU108
  68:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 395              		.loc 1 68 33 is_stmt 0 view .LVU109
 396 0070 1793     		str	r3, [sp, #92]
  69:Core/Src/tim.c ****   {
 397              		.loc 1 69 3 is_stmt 1 view .LVU110
  69:Core/Src/tim.c ****   {
 398              		.loc 1 69 7 is_stmt 0 view .LVU111
 399 0072 15A9     		add	r1, sp, #84
 400 0074 2048     		ldr	r0, .L31
 401 0076 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 402              	.LVL22:
  69:Core/Src/tim.c ****   {
 403              		.loc 1 69 6 view .LVU112
 404 007a 0028     		cmp	r0, #0
 405 007c 33D1     		bne	.L28
 406              	.L21:
  73:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 407              		.loc 1 73 3 is_stmt 1 view .LVU113
  73:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 408              		.loc 1 73 20 is_stmt 0 view .LVU114
 409 007e 6023     		movs	r3, #96
 410 0080 0E93     		str	r3, [sp, #56]
  74:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 411              		.loc 1 74 3 is_stmt 1 view .LVU115
  74:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 412              		.loc 1 74 19 is_stmt 0 view .LVU116
 413 0082 0023     		movs	r3, #0
 414 0084 0F93     		str	r3, [sp, #60]
  75:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 415              		.loc 1 75 3 is_stmt 1 view .LVU117
  75:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 416              		.loc 1 75 24 is_stmt 0 view .LVU118
 417 0086 1093     		str	r3, [sp, #64]
  76:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 418              		.loc 1 76 3 is_stmt 1 view .LVU119
  76:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 419              		.loc 1 76 25 is_stmt 0 view .LVU120
 420 0088 1193     		str	r3, [sp, #68]
  77:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 421              		.loc 1 77 3 is_stmt 1 view .LVU121
  77:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 422              		.loc 1 77 24 is_stmt 0 view .LVU122
 423 008a 1293     		str	r3, [sp, #72]
  78:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 424              		.loc 1 78 3 is_stmt 1 view .LVU123
  78:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 425              		.loc 1 78 25 is_stmt 0 view .LVU124
 426 008c 1393     		str	r3, [sp, #76]
  79:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 427              		.loc 1 79 3 is_stmt 1 view .LVU125
  79:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 428              		.loc 1 79 26 is_stmt 0 view .LVU126
 429 008e 1493     		str	r3, [sp, #80]
  80:Core/Src/tim.c ****   {
 430              		.loc 1 80 3 is_stmt 1 view .LVU127
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 15


  80:Core/Src/tim.c ****   {
 431              		.loc 1 80 7 is_stmt 0 view .LVU128
 432 0090 0422     		movs	r2, #4
 433 0092 0EA9     		add	r1, sp, #56
 434 0094 1848     		ldr	r0, .L31
 435 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 436              	.LVL23:
  80:Core/Src/tim.c ****   {
 437              		.loc 1 80 6 view .LVU129
 438 009a 38BB     		cbnz	r0, .L29
 439              	.L22:
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 440              		.loc 1 84 3 is_stmt 1 view .LVU130
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 441              		.loc 1 84 40 is_stmt 0 view .LVU131
 442 009c 0023     		movs	r3, #0
 443 009e 0193     		str	r3, [sp, #4]
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 444              		.loc 1 85 3 is_stmt 1 view .LVU132
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 445              		.loc 1 85 41 is_stmt 0 view .LVU133
 446 00a0 0293     		str	r3, [sp, #8]
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 447              		.loc 1 86 3 is_stmt 1 view .LVU134
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 448              		.loc 1 86 34 is_stmt 0 view .LVU135
 449 00a2 0393     		str	r3, [sp, #12]
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 450              		.loc 1 87 3 is_stmt 1 view .LVU136
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 451              		.loc 1 87 33 is_stmt 0 view .LVU137
 452 00a4 0493     		str	r3, [sp, #16]
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 453              		.loc 1 88 3 is_stmt 1 view .LVU138
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 454              		.loc 1 88 35 is_stmt 0 view .LVU139
 455 00a6 0593     		str	r3, [sp, #20]
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 456              		.loc 1 89 3 is_stmt 1 view .LVU140
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 457              		.loc 1 89 38 is_stmt 0 view .LVU141
 458 00a8 4FF40052 		mov	r2, #8192
 459 00ac 0692     		str	r2, [sp, #24]
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 460              		.loc 1 90 3 is_stmt 1 view .LVU142
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 461              		.loc 1 90 36 is_stmt 0 view .LVU143
 462 00ae 0793     		str	r3, [sp, #28]
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 463              		.loc 1 91 3 is_stmt 1 view .LVU144
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 464              		.loc 1 91 36 is_stmt 0 view .LVU145
 465 00b0 0893     		str	r3, [sp, #32]
  92:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 466              		.loc 1 92 3 is_stmt 1 view .LVU146
  92:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 467              		.loc 1 92 36 is_stmt 0 view .LVU147
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 16


 468 00b2 0993     		str	r3, [sp, #36]
  93:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 469              		.loc 1 93 3 is_stmt 1 view .LVU148
  93:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 470              		.loc 1 93 39 is_stmt 0 view .LVU149
 471 00b4 4FF00072 		mov	r2, #33554432
 472 00b8 0A92     		str	r2, [sp, #40]
  94:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 473              		.loc 1 94 3 is_stmt 1 view .LVU150
  94:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 474              		.loc 1 94 37 is_stmt 0 view .LVU151
 475 00ba 0B93     		str	r3, [sp, #44]
  95:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 476              		.loc 1 95 3 is_stmt 1 view .LVU152
  95:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 477              		.loc 1 95 37 is_stmt 0 view .LVU153
 478 00bc 0C93     		str	r3, [sp, #48]
  96:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 479              		.loc 1 96 3 is_stmt 1 view .LVU154
  96:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 480              		.loc 1 96 40 is_stmt 0 view .LVU155
 481 00be 0D93     		str	r3, [sp, #52]
  97:Core/Src/tim.c ****   {
 482              		.loc 1 97 3 is_stmt 1 view .LVU156
  97:Core/Src/tim.c ****   {
 483              		.loc 1 97 7 is_stmt 0 view .LVU157
 484 00c0 01A9     		add	r1, sp, #4
 485 00c2 0D48     		ldr	r0, .L31
 486 00c4 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 487              	.LVL24:
  97:Core/Src/tim.c ****   {
 488              		.loc 1 97 6 view .LVU158
 489 00c8 98B9     		cbnz	r0, .L30
 490              	.L23:
 104:Core/Src/tim.c **** 
 491              		.loc 1 104 3 is_stmt 1 view .LVU159
 492 00ca 0B48     		ldr	r0, .L31
 493 00cc FFF7FEFF 		bl	HAL_TIM_MspPostInit
 494              	.LVL25:
 106:Core/Src/tim.c **** /* TIM20 init function */
 495              		.loc 1 106 1 is_stmt 0 view .LVU160
 496 00d0 1CB0     		add	sp, sp, #112
 497              	.LCFI10:
 498              		.cfi_remember_state
 499              		.cfi_def_cfa_offset 8
 500              		@ sp needed
 501 00d2 10BD     		pop	{r4, pc}
 502              	.L25:
 503              	.LCFI11:
 504              		.cfi_restore_state
  55:Core/Src/tim.c ****   }
 505              		.loc 1 55 5 is_stmt 1 view .LVU161
 506 00d4 FFF7FEFF 		bl	Error_Handler
 507              	.LVL26:
 508 00d8 B9E7     		b	.L18
 509              	.L26:
  60:Core/Src/tim.c ****   }
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 17


 510              		.loc 1 60 5 view .LVU162
 511 00da FFF7FEFF 		bl	Error_Handler
 512              	.LVL27:
 513 00de BFE7     		b	.L19
 514              	.L27:
  64:Core/Src/tim.c ****   }
 515              		.loc 1 64 5 view .LVU163
 516 00e0 FFF7FEFF 		bl	Error_Handler
 517              	.LVL28:
 518 00e4 C1E7     		b	.L20
 519              	.L28:
  71:Core/Src/tim.c ****   }
 520              		.loc 1 71 5 view .LVU164
 521 00e6 FFF7FEFF 		bl	Error_Handler
 522              	.LVL29:
 523 00ea C8E7     		b	.L21
 524              	.L29:
  82:Core/Src/tim.c ****   }
 525              		.loc 1 82 5 view .LVU165
 526 00ec FFF7FEFF 		bl	Error_Handler
 527              	.LVL30:
 528 00f0 D4E7     		b	.L22
 529              	.L30:
  99:Core/Src/tim.c ****   }
 530              		.loc 1 99 5 view .LVU166
 531 00f2 FFF7FEFF 		bl	Error_Handler
 532              	.LVL31:
 533 00f6 E8E7     		b	.L23
 534              	.L32:
 535              		.align	2
 536              	.L31:
 537 00f8 00000000 		.word	.LANCHOR0
 538 00fc 002C0140 		.word	1073818624
 539              		.cfi_endproc
 540              	.LFE132:
 542              		.section	.text.MX_TIM20_Init,"ax",%progbits
 543              		.align	1
 544              		.global	MX_TIM20_Init
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 549              	MX_TIM20_Init:
 550              	.LFB133:
 109:Core/Src/tim.c **** 
 551              		.loc 1 109 1 view -0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 112
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555 0000 10B5     		push	{r4, lr}
 556              	.LCFI12:
 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 4, -8
 559              		.cfi_offset 14, -4
 560 0002 9CB0     		sub	sp, sp, #112
 561              	.LCFI13:
 562              		.cfi_def_cfa_offset 120
 115:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 18


 563              		.loc 1 115 3 view .LVU168
 115:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 564              		.loc 1 115 26 is_stmt 0 view .LVU169
 565 0004 0024     		movs	r4, #0
 566 0006 1894     		str	r4, [sp, #96]
 567 0008 1994     		str	r4, [sp, #100]
 568 000a 1A94     		str	r4, [sp, #104]
 569 000c 1B94     		str	r4, [sp, #108]
 116:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 570              		.loc 1 116 3 is_stmt 1 view .LVU170
 116:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 571              		.loc 1 116 27 is_stmt 0 view .LVU171
 572 000e 1594     		str	r4, [sp, #84]
 573 0010 1694     		str	r4, [sp, #88]
 574 0012 1794     		str	r4, [sp, #92]
 117:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 575              		.loc 1 117 3 is_stmt 1 view .LVU172
 117:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 576              		.loc 1 117 22 is_stmt 0 view .LVU173
 577 0014 0E94     		str	r4, [sp, #56]
 578 0016 0F94     		str	r4, [sp, #60]
 579 0018 1094     		str	r4, [sp, #64]
 580 001a 1194     		str	r4, [sp, #68]
 581 001c 1294     		str	r4, [sp, #72]
 582 001e 1394     		str	r4, [sp, #76]
 583 0020 1494     		str	r4, [sp, #80]
 118:Core/Src/tim.c **** 
 584              		.loc 1 118 3 is_stmt 1 view .LVU174
 118:Core/Src/tim.c **** 
 585              		.loc 1 118 34 is_stmt 0 view .LVU175
 586 0022 3422     		movs	r2, #52
 587 0024 2146     		mov	r1, r4
 588 0026 01A8     		add	r0, sp, #4
 589 0028 FFF7FEFF 		bl	memset
 590              	.LVL32:
 123:Core/Src/tim.c ****   htim20.Init.Prescaler = 1;
 591              		.loc 1 123 3 is_stmt 1 view .LVU176
 123:Core/Src/tim.c ****   htim20.Init.Prescaler = 1;
 592              		.loc 1 123 19 is_stmt 0 view .LVU177
 593 002c 3248     		ldr	r0, .L47
 594 002e 334B     		ldr	r3, .L47+4
 595 0030 0360     		str	r3, [r0]
 124:Core/Src/tim.c ****   htim20.Init.CounterMode = TIM_COUNTERMODE_UP;
 596              		.loc 1 124 3 is_stmt 1 view .LVU178
 124:Core/Src/tim.c ****   htim20.Init.CounterMode = TIM_COUNTERMODE_UP;
 597              		.loc 1 124 25 is_stmt 0 view .LVU179
 598 0032 0123     		movs	r3, #1
 599 0034 4360     		str	r3, [r0, #4]
 125:Core/Src/tim.c ****   htim20.Init.Period = 4999;
 600              		.loc 1 125 3 is_stmt 1 view .LVU180
 125:Core/Src/tim.c ****   htim20.Init.Period = 4999;
 601              		.loc 1 125 27 is_stmt 0 view .LVU181
 602 0036 8460     		str	r4, [r0, #8]
 126:Core/Src/tim.c ****   htim20.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 603              		.loc 1 126 3 is_stmt 1 view .LVU182
 126:Core/Src/tim.c ****   htim20.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 604              		.loc 1 126 22 is_stmt 0 view .LVU183
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 19


 605 0038 41F28733 		movw	r3, #4999
 606 003c C360     		str	r3, [r0, #12]
 127:Core/Src/tim.c ****   htim20.Init.RepetitionCounter = 0;
 607              		.loc 1 127 3 is_stmt 1 view .LVU184
 127:Core/Src/tim.c ****   htim20.Init.RepetitionCounter = 0;
 608              		.loc 1 127 29 is_stmt 0 view .LVU185
 609 003e 0461     		str	r4, [r0, #16]
 128:Core/Src/tim.c ****   htim20.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 610              		.loc 1 128 3 is_stmt 1 view .LVU186
 128:Core/Src/tim.c ****   htim20.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 611              		.loc 1 128 33 is_stmt 0 view .LVU187
 612 0040 4461     		str	r4, [r0, #20]
 129:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim20) != HAL_OK)
 613              		.loc 1 129 3 is_stmt 1 view .LVU188
 129:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim20) != HAL_OK)
 614              		.loc 1 129 33 is_stmt 0 view .LVU189
 615 0042 8023     		movs	r3, #128
 616 0044 8361     		str	r3, [r0, #24]
 130:Core/Src/tim.c ****   {
 617              		.loc 1 130 3 is_stmt 1 view .LVU190
 130:Core/Src/tim.c ****   {
 618              		.loc 1 130 7 is_stmt 0 view .LVU191
 619 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 620              	.LVL33:
 130:Core/Src/tim.c ****   {
 621              		.loc 1 130 6 view .LVU192
 622 004a 0028     		cmp	r0, #0
 623 004c 41D1     		bne	.L41
 624              	.L34:
 134:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim20, &sClockSourceConfig) != HAL_OK)
 625              		.loc 1 134 3 is_stmt 1 view .LVU193
 134:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim20, &sClockSourceConfig) != HAL_OK)
 626              		.loc 1 134 34 is_stmt 0 view .LVU194
 627 004e 4FF48053 		mov	r3, #4096
 628 0052 1893     		str	r3, [sp, #96]
 135:Core/Src/tim.c ****   {
 629              		.loc 1 135 3 is_stmt 1 view .LVU195
 135:Core/Src/tim.c ****   {
 630              		.loc 1 135 7 is_stmt 0 view .LVU196
 631 0054 18A9     		add	r1, sp, #96
 632 0056 2848     		ldr	r0, .L47
 633 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 634              	.LVL34:
 135:Core/Src/tim.c ****   {
 635              		.loc 1 135 6 view .LVU197
 636 005c 0028     		cmp	r0, #0
 637 005e 3BD1     		bne	.L42
 638              	.L35:
 139:Core/Src/tim.c ****   {
 639              		.loc 1 139 3 is_stmt 1 view .LVU198
 139:Core/Src/tim.c ****   {
 640              		.loc 1 139 7 is_stmt 0 view .LVU199
 641 0060 2548     		ldr	r0, .L47
 642 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 643              	.LVL35:
 139:Core/Src/tim.c ****   {
 644              		.loc 1 139 6 view .LVU200
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 20


 645 0066 0028     		cmp	r0, #0
 646 0068 39D1     		bne	.L43
 647              	.L36:
 143:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 648              		.loc 1 143 3 is_stmt 1 view .LVU201
 143:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 649              		.loc 1 143 37 is_stmt 0 view .LVU202
 650 006a 0023     		movs	r3, #0
 651 006c 1593     		str	r3, [sp, #84]
 144:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 652              		.loc 1 144 3 is_stmt 1 view .LVU203
 144:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 653              		.loc 1 144 38 is_stmt 0 view .LVU204
 654 006e 1693     		str	r3, [sp, #88]
 145:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim20, &sMasterConfig) != HAL_OK)
 655              		.loc 1 145 3 is_stmt 1 view .LVU205
 145:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim20, &sMasterConfig) != HAL_OK)
 656              		.loc 1 145 33 is_stmt 0 view .LVU206
 657 0070 1793     		str	r3, [sp, #92]
 146:Core/Src/tim.c ****   {
 658              		.loc 1 146 3 is_stmt 1 view .LVU207
 146:Core/Src/tim.c ****   {
 659              		.loc 1 146 7 is_stmt 0 view .LVU208
 660 0072 15A9     		add	r1, sp, #84
 661 0074 2048     		ldr	r0, .L47
 662 0076 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 663              	.LVL36:
 146:Core/Src/tim.c ****   {
 664              		.loc 1 146 6 view .LVU209
 665 007a 0028     		cmp	r0, #0
 666 007c 32D1     		bne	.L44
 667              	.L37:
 150:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 668              		.loc 1 150 3 is_stmt 1 view .LVU210
 150:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 669              		.loc 1 150 20 is_stmt 0 view .LVU211
 670 007e 6023     		movs	r3, #96
 671 0080 0E93     		str	r3, [sp, #56]
 151:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 672              		.loc 1 151 3 is_stmt 1 view .LVU212
 151:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 673              		.loc 1 151 19 is_stmt 0 view .LVU213
 674 0082 0022     		movs	r2, #0
 675 0084 0F92     		str	r2, [sp, #60]
 152:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 676              		.loc 1 152 3 is_stmt 1 view .LVU214
 152:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 677              		.loc 1 152 24 is_stmt 0 view .LVU215
 678 0086 1092     		str	r2, [sp, #64]
 153:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 679              		.loc 1 153 3 is_stmt 1 view .LVU216
 153:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 680              		.loc 1 153 25 is_stmt 0 view .LVU217
 681 0088 1192     		str	r2, [sp, #68]
 154:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 682              		.loc 1 154 3 is_stmt 1 view .LVU218
 154:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 21


 683              		.loc 1 154 24 is_stmt 0 view .LVU219
 684 008a 1292     		str	r2, [sp, #72]
 155:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 685              		.loc 1 155 3 is_stmt 1 view .LVU220
 155:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 686              		.loc 1 155 25 is_stmt 0 view .LVU221
 687 008c 1392     		str	r2, [sp, #76]
 156:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim20, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 688              		.loc 1 156 3 is_stmt 1 view .LVU222
 156:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim20, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 689              		.loc 1 156 26 is_stmt 0 view .LVU223
 690 008e 1492     		str	r2, [sp, #80]
 157:Core/Src/tim.c ****   {
 691              		.loc 1 157 3 is_stmt 1 view .LVU224
 157:Core/Src/tim.c ****   {
 692              		.loc 1 157 7 is_stmt 0 view .LVU225
 693 0090 0EA9     		add	r1, sp, #56
 694 0092 1948     		ldr	r0, .L47
 695 0094 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 696              	.LVL37:
 157:Core/Src/tim.c ****   {
 697              		.loc 1 157 6 view .LVU226
 698 0098 38BB     		cbnz	r0, .L45
 699              	.L38:
 161:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 700              		.loc 1 161 3 is_stmt 1 view .LVU227
 161:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 701              		.loc 1 161 40 is_stmt 0 view .LVU228
 702 009a 0023     		movs	r3, #0
 703 009c 0193     		str	r3, [sp, #4]
 162:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 704              		.loc 1 162 3 is_stmt 1 view .LVU229
 162:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 705              		.loc 1 162 41 is_stmt 0 view .LVU230
 706 009e 0293     		str	r3, [sp, #8]
 163:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 707              		.loc 1 163 3 is_stmt 1 view .LVU231
 163:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 708              		.loc 1 163 34 is_stmt 0 view .LVU232
 709 00a0 0393     		str	r3, [sp, #12]
 164:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 710              		.loc 1 164 3 is_stmt 1 view .LVU233
 164:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 711              		.loc 1 164 33 is_stmt 0 view .LVU234
 712 00a2 0493     		str	r3, [sp, #16]
 165:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 713              		.loc 1 165 3 is_stmt 1 view .LVU235
 165:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 714              		.loc 1 165 35 is_stmt 0 view .LVU236
 715 00a4 0593     		str	r3, [sp, #20]
 166:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 716              		.loc 1 166 3 is_stmt 1 view .LVU237
 166:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 717              		.loc 1 166 38 is_stmt 0 view .LVU238
 718 00a6 4FF40052 		mov	r2, #8192
 719 00aa 0692     		str	r2, [sp, #24]
 167:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 22


 720              		.loc 1 167 3 is_stmt 1 view .LVU239
 167:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 721              		.loc 1 167 36 is_stmt 0 view .LVU240
 722 00ac 0793     		str	r3, [sp, #28]
 168:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 723              		.loc 1 168 3 is_stmt 1 view .LVU241
 168:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 724              		.loc 1 168 36 is_stmt 0 view .LVU242
 725 00ae 0893     		str	r3, [sp, #32]
 169:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 726              		.loc 1 169 3 is_stmt 1 view .LVU243
 169:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 727              		.loc 1 169 36 is_stmt 0 view .LVU244
 728 00b0 0993     		str	r3, [sp, #36]
 170:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 729              		.loc 1 170 3 is_stmt 1 view .LVU245
 170:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 730              		.loc 1 170 39 is_stmt 0 view .LVU246
 731 00b2 4FF00072 		mov	r2, #33554432
 732 00b6 0A92     		str	r2, [sp, #40]
 171:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 733              		.loc 1 171 3 is_stmt 1 view .LVU247
 171:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 734              		.loc 1 171 37 is_stmt 0 view .LVU248
 735 00b8 0B93     		str	r3, [sp, #44]
 172:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 736              		.loc 1 172 3 is_stmt 1 view .LVU249
 172:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 737              		.loc 1 172 37 is_stmt 0 view .LVU250
 738 00ba 0C93     		str	r3, [sp, #48]
 173:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim20, &sBreakDeadTimeConfig) != HAL_OK)
 739              		.loc 1 173 3 is_stmt 1 view .LVU251
 173:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim20, &sBreakDeadTimeConfig) != HAL_OK)
 740              		.loc 1 173 40 is_stmt 0 view .LVU252
 741 00bc 0D93     		str	r3, [sp, #52]
 174:Core/Src/tim.c ****   {
 742              		.loc 1 174 3 is_stmt 1 view .LVU253
 174:Core/Src/tim.c ****   {
 743              		.loc 1 174 7 is_stmt 0 view .LVU254
 744 00be 01A9     		add	r1, sp, #4
 745 00c0 0D48     		ldr	r0, .L47
 746 00c2 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 747              	.LVL38:
 174:Core/Src/tim.c ****   {
 748              		.loc 1 174 6 view .LVU255
 749 00c6 98B9     		cbnz	r0, .L46
 750              	.L39:
 181:Core/Src/tim.c **** 
 751              		.loc 1 181 3 is_stmt 1 view .LVU256
 752 00c8 0B48     		ldr	r0, .L47
 753 00ca FFF7FEFF 		bl	HAL_TIM_MspPostInit
 754              	.LVL39:
 183:Core/Src/tim.c **** 
 755              		.loc 1 183 1 is_stmt 0 view .LVU257
 756 00ce 1CB0     		add	sp, sp, #112
 757              	.LCFI14:
 758              		.cfi_remember_state
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 23


 759              		.cfi_def_cfa_offset 8
 760              		@ sp needed
 761 00d0 10BD     		pop	{r4, pc}
 762              	.L41:
 763              	.LCFI15:
 764              		.cfi_restore_state
 132:Core/Src/tim.c ****   }
 765              		.loc 1 132 5 is_stmt 1 view .LVU258
 766 00d2 FFF7FEFF 		bl	Error_Handler
 767              	.LVL40:
 768 00d6 BAE7     		b	.L34
 769              	.L42:
 137:Core/Src/tim.c ****   }
 770              		.loc 1 137 5 view .LVU259
 771 00d8 FFF7FEFF 		bl	Error_Handler
 772              	.LVL41:
 773 00dc C0E7     		b	.L35
 774              	.L43:
 141:Core/Src/tim.c ****   }
 775              		.loc 1 141 5 view .LVU260
 776 00de FFF7FEFF 		bl	Error_Handler
 777              	.LVL42:
 778 00e2 C2E7     		b	.L36
 779              	.L44:
 148:Core/Src/tim.c ****   }
 780              		.loc 1 148 5 view .LVU261
 781 00e4 FFF7FEFF 		bl	Error_Handler
 782              	.LVL43:
 783 00e8 C9E7     		b	.L37
 784              	.L45:
 159:Core/Src/tim.c ****   }
 785              		.loc 1 159 5 view .LVU262
 786 00ea FFF7FEFF 		bl	Error_Handler
 787              	.LVL44:
 788 00ee D4E7     		b	.L38
 789              	.L46:
 176:Core/Src/tim.c ****   }
 790              		.loc 1 176 5 view .LVU263
 791 00f0 FFF7FEFF 		bl	Error_Handler
 792              	.LVL45:
 793 00f4 E8E7     		b	.L39
 794              	.L48:
 795 00f6 00BF     		.align	2
 796              	.L47:
 797 00f8 00000000 		.word	.LANCHOR1
 798 00fc 00500140 		.word	1073827840
 799              		.cfi_endproc
 800              	.LFE133:
 802              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 803              		.align	1
 804              		.global	HAL_TIM_Base_MspDeInit
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 809              	HAL_TIM_Base_MspDeInit:
 810              	.LVL46:
 811              	.LFB136:
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 24


 266:Core/Src/tim.c **** 
 267:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 268:Core/Src/tim.c **** {
 812              		.loc 1 268 1 view -0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816              		.loc 1 268 1 is_stmt 0 view .LVU265
 817 0000 08B5     		push	{r3, lr}
 818              	.LCFI16:
 819              		.cfi_def_cfa_offset 8
 820              		.cfi_offset 3, -8
 821              		.cfi_offset 14, -4
 269:Core/Src/tim.c **** 
 270:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 822              		.loc 1 270 3 is_stmt 1 view .LVU266
 823              		.loc 1 270 20 is_stmt 0 view .LVU267
 824 0002 0368     		ldr	r3, [r0]
 825              		.loc 1 270 5 view .LVU268
 826 0004 0D4A     		ldr	r2, .L55
 827 0006 9342     		cmp	r3, r2
 828 0008 03D0     		beq	.L53
 271:Core/Src/tim.c ****   {
 272:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 273:Core/Src/tim.c **** 
 274:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 275:Core/Src/tim.c ****     /* Peripheral clock disable */
 276:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 277:Core/Src/tim.c **** 
 278:Core/Src/tim.c ****     /* TIM1 interrupt Deinit */
 279:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 280:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 281:Core/Src/tim.c **** 
 282:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 283:Core/Src/tim.c ****   }
 284:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM20)
 829              		.loc 1 284 8 is_stmt 1 view .LVU269
 830              		.loc 1 284 10 is_stmt 0 view .LVU270
 831 000a 0D4A     		ldr	r2, .L55+4
 832 000c 9342     		cmp	r3, r2
 833 000e 0AD0     		beq	.L54
 834              	.LVL47:
 835              	.L49:
 285:Core/Src/tim.c ****   {
 286:Core/Src/tim.c ****   /* USER CODE BEGIN TIM20_MspDeInit 0 */
 287:Core/Src/tim.c **** 
 288:Core/Src/tim.c ****   /* USER CODE END TIM20_MspDeInit 0 */
 289:Core/Src/tim.c ****     /* Peripheral clock disable */
 290:Core/Src/tim.c ****     __HAL_RCC_TIM20_CLK_DISABLE();
 291:Core/Src/tim.c **** 
 292:Core/Src/tim.c ****     /* TIM20 interrupt Deinit */
 293:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM20_TRG_COM_IRQn);
 294:Core/Src/tim.c ****   /* USER CODE BEGIN TIM20_MspDeInit 1 */
 295:Core/Src/tim.c **** 
 296:Core/Src/tim.c ****   /* USER CODE END TIM20_MspDeInit 1 */
 297:Core/Src/tim.c ****   }
 298:Core/Src/tim.c **** }
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 25


 836              		.loc 1 298 1 view .LVU271
 837 0010 08BD     		pop	{r3, pc}
 838              	.LVL48:
 839              	.L53:
 276:Core/Src/tim.c **** 
 840              		.loc 1 276 5 is_stmt 1 view .LVU272
 841 0012 02F56442 		add	r2, r2, #58368
 842 0016 136E     		ldr	r3, [r2, #96]
 843 0018 23F40063 		bic	r3, r3, #2048
 844 001c 1366     		str	r3, [r2, #96]
 279:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 845              		.loc 1 279 5 view .LVU273
 846 001e 1A20     		movs	r0, #26
 847              	.LVL49:
 279:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 848              		.loc 1 279 5 is_stmt 0 view .LVU274
 849 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 850              	.LVL50:
 851 0024 F4E7     		b	.L49
 852              	.LVL51:
 853              	.L54:
 290:Core/Src/tim.c **** 
 854              		.loc 1 290 5 is_stmt 1 view .LVU275
 855 0026 02F54042 		add	r2, r2, #49152
 856 002a 136E     		ldr	r3, [r2, #96]
 857 002c 23F48013 		bic	r3, r3, #1048576
 858 0030 1366     		str	r3, [r2, #96]
 293:Core/Src/tim.c ****   /* USER CODE BEGIN TIM20_MspDeInit 1 */
 859              		.loc 1 293 5 view .LVU276
 860 0032 4F20     		movs	r0, #79
 861              	.LVL52:
 293:Core/Src/tim.c ****   /* USER CODE BEGIN TIM20_MspDeInit 1 */
 862              		.loc 1 293 5 is_stmt 0 view .LVU277
 863 0034 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 864              	.LVL53:
 865              		.loc 1 298 1 view .LVU278
 866 0038 EAE7     		b	.L49
 867              	.L56:
 868 003a 00BF     		.align	2
 869              	.L55:
 870 003c 002C0140 		.word	1073818624
 871 0040 00500140 		.word	1073827840
 872              		.cfi_endproc
 873              	.LFE136:
 875              		.global	htim20
 876              		.global	htim1
 877              		.section	.bss.htim1,"aw",%nobits
 878              		.align	2
 879              		.set	.LANCHOR0,. + 0
 882              	htim1:
 883 0000 00000000 		.space	76
 883      00000000 
 883      00000000 
 883      00000000 
 883      00000000 
 884              		.section	.bss.htim20,"aw",%nobits
 885              		.align	2
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 26


 886              		.set	.LANCHOR1,. + 0
 889              	htim20:
 890 0000 00000000 		.space	76
 890      00000000 
 890      00000000 
 890      00000000 
 890      00000000 
 891              		.text
 892              	.Letext0:
 893              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 894              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 895              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g491xx.h"
 896              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 897              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 898              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 899              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 900              		.file 9 "Core/Inc/tim.h"
 901              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h"
 902              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim_ex.h"
 903              		.file 12 "Core/Inc/main.h"
 904              		.file 13 "<built-in>"
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s 			page 27


DEFINED SYMBOLS
                            *ABS*:00000000 tim.c
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:20     .text.HAL_TIM_Base_MspInit:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:26     .text.HAL_TIM_Base_MspInit:00000000 HAL_TIM_Base_MspInit
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:131    .text.HAL_TIM_Base_MspInit:00000064 $d
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:138    .text.HAL_TIM_MspPostInit:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:144    .text.HAL_TIM_MspPostInit:00000000 HAL_TIM_MspPostInit
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:274    .text.HAL_TIM_MspPostInit:0000007c $d
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:282    .text.MX_TIM1_Init:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:288    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:537    .text.MX_TIM1_Init:000000f8 $d
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:543    .text.MX_TIM20_Init:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:549    .text.MX_TIM20_Init:00000000 MX_TIM20_Init
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:797    .text.MX_TIM20_Init:000000f8 $d
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:803    .text.HAL_TIM_Base_MspDeInit:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:809    .text.HAL_TIM_Base_MspDeInit:00000000 HAL_TIM_Base_MspDeInit
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:870    .text.HAL_TIM_Base_MspDeInit:0000003c $d
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:889    .bss.htim20:00000000 htim20
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:882    .bss.htim1:00000000 htim1
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:878    .bss.htim1:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccTSoh8a.s:885    .bss.htim20:00000000 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
Error_Handler
HAL_NVIC_DisableIRQ
