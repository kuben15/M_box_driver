ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_UART_RxCpltCallback
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_UART_RxCpltCallback:
  27              	.LVL0:
  28              	.LFB135:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "spi.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #include <string.h>
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 2


  30:Core/Src/main.c **** #include <stdio.h>
  31:Core/Src/main.c **** #include "TMAG5170.h"
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** uint16_t count = 2000;
  54:Core/Src/main.c **** uint8_t data = 0;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
  64:Core/Src/main.c **** {
  30              		.loc 1 64 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 64 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  65:Core/Src/main.c ****   if(data == 49)
  40              		.loc 1 65 3 is_stmt 1 view .LVU2
  41              		.loc 1 65 11 is_stmt 0 view .LVU3
  42 0002 104B     		ldr	r3, .L6
  43 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  44              		.loc 1 65 5 view .LVU4
  45 0006 312B     		cmp	r3, #49
  46 0008 0ED0     		beq	.L5
  66:Core/Src/main.c ****   {
  67:Core/Src/main.c ****     HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, 1);
  68:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 2500);
  69:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 3


  70:Core/Src/main.c ****   }
  71:Core/Src/main.c ****   else
  72:Core/Src/main.c ****   {
  73:Core/Src/main.c ****     HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, 0);
  47              		.loc 1 73 5 is_stmt 1 view .LVU5
  48 000a 0022     		movs	r2, #0
  49 000c 0821     		movs	r1, #8
  50 000e 0E48     		ldr	r0, .L6+4
  51              	.LVL1:
  52              		.loc 1 73 5 is_stmt 0 view .LVU6
  53 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
  54              	.LVL2:
  74:Core/Src/main.c ****     HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_2);
  55              		.loc 1 74 5 is_stmt 1 view .LVU7
  56 0014 0421     		movs	r1, #4
  57 0016 0D48     		ldr	r0, .L6+8
  58 0018 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
  59              	.LVL3:
  60              	.L3:
  75:Core/Src/main.c ****   }
  76:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, &data, 1);
  61              		.loc 1 76 3 view .LVU8
  62 001c 0122     		movs	r2, #1
  63 001e 0949     		ldr	r1, .L6
  64 0020 0B48     		ldr	r0, .L6+12
  65 0022 FFF7FEFF 		bl	HAL_UART_Receive_IT
  66              	.LVL4:
  77:Core/Src/main.c **** }
  67              		.loc 1 77 1 is_stmt 0 view .LVU9
  68 0026 08BD     		pop	{r3, pc}
  69              	.LVL5:
  70              	.L5:
  67:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 2500);
  71              		.loc 1 67 5 is_stmt 1 view .LVU10
  72 0028 0122     		movs	r2, #1
  73 002a 0821     		movs	r1, #8
  74 002c 0648     		ldr	r0, .L6+4
  75              	.LVL6:
  67:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 2500);
  76              		.loc 1 67 5 is_stmt 0 view .LVU11
  77 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
  78              	.LVL7:
  68:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
  79              		.loc 1 68 5 is_stmt 1 view .LVU12
  80 0032 0648     		ldr	r0, .L6+8
  81 0034 0368     		ldr	r3, [r0]
  82 0036 40F6C412 		movw	r2, #2500
  83 003a 9A63     		str	r2, [r3, #56]
  69:Core/Src/main.c ****   }
  84              		.loc 1 69 5 view .LVU13
  85 003c 0421     		movs	r1, #4
  86 003e FFF7FEFF 		bl	HAL_TIM_PWM_Start
  87              	.LVL8:
  88 0042 EBE7     		b	.L3
  89              	.L7:
  90              		.align	2
  91              	.L6:
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 4


  92 0044 00000000 		.word	.LANCHOR0
  93 0048 00080048 		.word	1207961600
  94 004c 00000000 		.word	htim1
  95 0050 00000000 		.word	huart2
  96              		.cfi_endproc
  97              	.LFE135:
  99              		.section	.text.Error_Handler,"ax",%progbits
 100              		.align	1
 101              		.global	Error_Handler
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 106              	Error_Handler:
 107              	.LFB138:
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** // void HallSensorSettings(void)
  81:Core/Src/main.c **** // {
  82:Core/Src/main.c **** //   TMAG5170_dev_conf_settings(TMAG5170_DEVICE_CONFIG_settings_t *new_settings);
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   
  85:Core/Src/main.c **** // }
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* USER CODE END PFP */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  90:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* USER CODE END 0 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /**
  95:Core/Src/main.c ****   * @brief  The application entry point.
  96:Core/Src/main.c ****   * @retval int
  97:Core/Src/main.c ****   */
  98:Core/Src/main.c **** int main(void)
  99:Core/Src/main.c **** {
 100:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 101:Core/Src/main.c ****   /* USER CODE END 1 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 106:Core/Src/main.c ****   HAL_Init();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END Init */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Configure the system clock */
 113:Core/Src/main.c ****   SystemClock_Config();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END SysInit */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Initialize all configured peripherals */
 120:Core/Src/main.c ****   MX_GPIO_Init();
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 5


 121:Core/Src/main.c ****   MX_TIM1_Init();
 122:Core/Src/main.c ****   MX_USART2_UART_Init();
 123:Core/Src/main.c ****   MX_UART4_Init();
 124:Core/Src/main.c ****   MX_SPI1_Init();
 125:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 126:Core/Src/main.c ****   DisableCRC();
 127:Core/Src/main.c ****   //uint8_t RxData;
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   //TMAG5170_return_code_t ret = TMAG5170_RET_OK;
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   TMAG5170_DEVICE_CONFIG_settings_t DevSettings;
 133:Core/Src/main.c ****   DevSettings.ConvAvg = TMAG5170_CONV_AVG_1x;
 134:Core/Src/main.c ****   DevSettings.MagTempCoef = TMAG5170_MAG_TEMPCO_0;
 135:Core/Src/main.c ****   DevSettings.OperatingMode = TMAG5170_OPERATING_MODE_ConfigurationMode;
 136:Core/Src/main.c ****   DevSettings.TempChannelEnabled = TMAG5170_T_CH_EN_TempChannelEnabled; 
 137:Core/Src/main.c ****   DevSettings.TempRate = TMAG5170_T_RATE_sameAsOtherSensors;
 138:Core/Src/main.c ****   DevSettings.TempChannelEnabled = TMAG5170_T_HLT_EN_tempLimitCheckOff;
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   TMAG5170_SENSOR_CONFIG_settings_t SensSettings;
 143:Core/Src/main.c ****   SensSettings.AngleEnabled = TMAG5170_ANGLE_EN_X_Y;
 144:Core/Src/main.c ****   SensSettings.SleepTime = TMAG5170_SLEEPTIME_1ms;
 145:Core/Src/main.c ****   SensSettings.MagChannelEnabled = TMAG5170_MAG_CH_EN_XY;
 146:Core/Src/main.c ****   SensSettings.Zrange = TMAG5170_Z_RANGE_50mT;
 147:Core/Src/main.c ****   SensSettings.Yrange = TMAG5170_Y_RANGE_50mT;
 148:Core/Src/main.c ****   SensSettings.Xrange = TMAG5170_X_RANGE_50mT;
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   TMAG5170_SYSTEM_CONFIG_settings_t SystemSettings;
 152:Core/Src/main.c ****   SystemSettings.DiagnosticSelect = TMAG5170_DIAG_SEL_AllDataPathTogether;
 153:Core/Src/main.c ****   SystemSettings.TriggerMode = TMAG5170_TRIGGER_MODE_nCSpulse;
 154:Core/Src/main.c ****   SystemSettings.DataType = TMAG5170_DATA_TYPE_32bit;
 155:Core/Src/main.c ****   SystemSettings.DiagnosticEnabled = TMAG5170_DIAG_EN_AFEdiagnosticsDisabled;
 156:Core/Src/main.c ****   SystemSettings.ZlimitCheck = TMAG5170_Z_HLT_EN_ZaxisLimitCheckOff;
 157:Core/Src/main.c ****   SystemSettings.YlimitCheck = TMAG5170_Y_HLT_EN_YaxisLimitCheckOff;
 158:Core/Src/main.c ****   SystemSettings.XlimitCheck = TMAG5170_X_HLT_EN_XaxisLimitCheckOff;
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   TMAG5170_ALERT_CONFIG_settings_t AlertSettings;
 162:Core/Src/main.c ****   AlertSettings.AlertStatus = TMAG5170_STATUS_ALRT_IsAsserted;
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   // TMAG5170 configuration
 166:Core/Src/main.c ****   // DisableCRC();
 167:Core/Src/main.c ****   // TMAG5170_dev_conf_settings(&DevSettings);
 168:Core/Src/main.c ****   // TMAG5170_sens_conf_settings(&SensSettings);
 169:Core/Src/main.c ****   // TMAG5170_sys_conf_settings(&SystemSettings);
 170:Core/Src/main.c ****   // TMAG5170_al_conf_settings(&AlertSettings);
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   //uint8_t bity = 0x01;
 173:Core/Src/main.c ****   char kupa[7] = "kupa: ";
 174:Core/Src/main.c ****   // float temperature = 0.0;
 175:Core/Src/main.c ****   // uint8_t UART_buff;
 176:Core/Src/main.c ****   // uint16_t UART_buff_length;
 177:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, &data, 1);
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 6


 178:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)"sterownik silnikami\r\n", strlen("sterownik silnikami\r\n")
 179:Core/Src/main.c ****   /* USER CODE END 2 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* Infinite loop */
 182:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 183:Core/Src/main.c ****   while (1)
 184:Core/Src/main.c ****   {
 185:Core/Src/main.c ****     /* USER CODE END WHILE */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 188:Core/Src/main.c ****     DisableCRC();
 189:Core/Src/main.c ****     TMAG5170_dev_conf_settings(&DevSettings);
 190:Core/Src/main.c ****     TMAG5170_sens_conf_settings(&SensSettings);
 191:Core/Src/main.c ****     TMAG5170_sys_conf_settings(&SystemSettings);
 192:Core/Src/main.c ****     TMAG5170_al_conf_settings(&AlertSettings);
 193:Core/Src/main.c ****     //ReadRegister();
 194:Core/Src/main.c ****     //ReadRegister1();
 195:Core/Src/main.c ****     
 196:Core/Src/main.c ****     //GetTemp();
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****     //HAL_GPIO_WritePin(CS1_GPIO_Port, CS1_Pin, 1);
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****     GetAngle();
 201:Core/Src/main.c ****     // temperature = GetTemp();
 202:Core/Src/main.c ****     // UART_buff_length = sprintf(UART_buff, "%f\r\n", temperature);
 203:Core/Src/main.c ****     // HAL_UART_Transmit(&huart2, UART_buff, UART_buff_length, HAL_MAX_DELAY );
 204:Core/Src/main.c ****     
 205:Core/Src/main.c ****     //HAL_UART_Transmit(&huart2, &asdkna, strlen(asdkna), HAL_MAX_DELAY);
 206:Core/Src/main.c ****     //HAL_UART_Transmit(&huart2, &Xvalue, strlen(Xvalue), HAL_MAX_DELAY);
 207:Core/Src/main.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*)kupa, strlen(kupa), HAL_MAX_DELAY);
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****     //GetAngle();
 210:Core/Src/main.c ****     //HAL_UART_Transmit(&huart2, bit, strlen(bit), HAL_MAX_DELAY);
 211:Core/Src/main.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*)"\r\n", strlen("\r\n"), HAL_MAX_DELAY);
 212:Core/Src/main.c ****     
 213:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)" hal transmit\r\n", strlen(" hal transmit\r\n"), HAL_MAX_
 214:Core/Src/main.c ****     HAL_Delay(1000);
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****     //HAL_UART_Transmit(&huart2, "\r\n", strlen("\r\n"), HAL_MAX_DELAY);
 217:Core/Src/main.c ****     
 218:Core/Src/main.c ****     
 219:Core/Src/main.c ****     HAL_Delay(100);
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****     // HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 223:Core/Src/main.c ****     // HAL_Delay(500);
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   }
 226:Core/Src/main.c ****   /* USER CODE END 3 */
 227:Core/Src/main.c **** }
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** /**
 230:Core/Src/main.c ****   * @brief System Clock Configuration
 231:Core/Src/main.c ****   * @retval None
 232:Core/Src/main.c ****   */
 233:Core/Src/main.c **** void SystemClock_Config(void)
 234:Core/Src/main.c **** {
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 7


 235:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 236:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 239:Core/Src/main.c ****   */
 240:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 243:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 246:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 247:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 248:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 249:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 250:Core/Src/main.c ****   {
 251:Core/Src/main.c ****     Error_Handler();
 252:Core/Src/main.c ****   }
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 255:Core/Src/main.c ****   */
 256:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 257:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 258:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 259:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 260:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 261:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 264:Core/Src/main.c ****   {
 265:Core/Src/main.c ****     Error_Handler();
 266:Core/Src/main.c ****   }
 267:Core/Src/main.c **** }
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** /* USER CODE END 4 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** /**
 274:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 275:Core/Src/main.c ****   * @retval None
 276:Core/Src/main.c ****   */
 277:Core/Src/main.c **** void Error_Handler(void)
 278:Core/Src/main.c **** {
 108              		.loc 1 278 1 view -0
 109              		.cfi_startproc
 110              		@ Volatile: function does not return.
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		@ link register save eliminated.
 279:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 280:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 281:Core/Src/main.c ****   __disable_irq();
 114              		.loc 1 281 3 view .LVU15
 115              	.LBB4:
 116              	.LBI4:
 117              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 8


   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 9


  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 10


 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 11


 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 118              		.loc 2 207 27 view .LVU16
 119              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 120              		.loc 2 209 3 view .LVU17
 121              		.syntax unified
 122              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 123 0000 72B6     		cpsid i
 124              	@ 0 "" 2
 125              		.thumb
 126              		.syntax unified
 127              	.L9:
 128              	.LBE5:
 129              	.LBE4:
 282:Core/Src/main.c ****   while (1)
 130              		.loc 1 282 3 discriminator 1 view .LVU18
 283:Core/Src/main.c ****   {
 284:Core/Src/main.c ****   }
 131              		.loc 1 284 3 discriminator 1 view .LVU19
 282:Core/Src/main.c ****   while (1)
 132              		.loc 1 282 9 discriminator 1 view .LVU20
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 12


 133 0002 FEE7     		b	.L9
 134              		.cfi_endproc
 135              	.LFE138:
 137              		.section	.text.SystemClock_Config,"ax",%progbits
 138              		.align	1
 139              		.global	SystemClock_Config
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 144              	SystemClock_Config:
 145              	.LFB137:
 234:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 146              		.loc 1 234 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 80
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150 0000 10B5     		push	{r4, lr}
 151              	.LCFI1:
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 4, -8
 154              		.cfi_offset 14, -4
 155 0002 94B0     		sub	sp, sp, #80
 156              	.LCFI2:
 157              		.cfi_def_cfa_offset 88
 235:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 158              		.loc 1 235 3 view .LVU22
 235:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 159              		.loc 1 235 22 is_stmt 0 view .LVU23
 160 0004 3822     		movs	r2, #56
 161 0006 0021     		movs	r1, #0
 162 0008 06A8     		add	r0, sp, #24
 163 000a FFF7FEFF 		bl	memset
 164              	.LVL9:
 236:Core/Src/main.c **** 
 165              		.loc 1 236 3 is_stmt 1 view .LVU24
 236:Core/Src/main.c **** 
 166              		.loc 1 236 22 is_stmt 0 view .LVU25
 167 000e 0024     		movs	r4, #0
 168 0010 0194     		str	r4, [sp, #4]
 169 0012 0294     		str	r4, [sp, #8]
 170 0014 0394     		str	r4, [sp, #12]
 171 0016 0494     		str	r4, [sp, #16]
 172 0018 0594     		str	r4, [sp, #20]
 240:Core/Src/main.c **** 
 173              		.loc 1 240 3 is_stmt 1 view .LVU26
 174 001a 4FF40070 		mov	r0, #512
 175 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 176              	.LVL10:
 245:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 177              		.loc 1 245 3 view .LVU27
 245:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 178              		.loc 1 245 36 is_stmt 0 view .LVU28
 179 0022 0223     		movs	r3, #2
 180 0024 0693     		str	r3, [sp, #24]
 246:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 181              		.loc 1 246 3 is_stmt 1 view .LVU29
 246:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 13


 182              		.loc 1 246 30 is_stmt 0 view .LVU30
 183 0026 4FF48073 		mov	r3, #256
 184 002a 0993     		str	r3, [sp, #36]
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 185              		.loc 1 247 3 is_stmt 1 view .LVU31
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 186              		.loc 1 247 41 is_stmt 0 view .LVU32
 187 002c 4023     		movs	r3, #64
 188 002e 0A93     		str	r3, [sp, #40]
 248:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 189              		.loc 1 248 3 is_stmt 1 view .LVU33
 248:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 190              		.loc 1 248 34 is_stmt 0 view .LVU34
 191 0030 0D94     		str	r4, [sp, #52]
 249:Core/Src/main.c ****   {
 192              		.loc 1 249 3 is_stmt 1 view .LVU35
 249:Core/Src/main.c ****   {
 193              		.loc 1 249 7 is_stmt 0 view .LVU36
 194 0032 06A8     		add	r0, sp, #24
 195 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 196              	.LVL11:
 249:Core/Src/main.c ****   {
 197              		.loc 1 249 6 view .LVU37
 198 0038 68B9     		cbnz	r0, .L14
 256:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 199              		.loc 1 256 3 is_stmt 1 view .LVU38
 256:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 200              		.loc 1 256 31 is_stmt 0 view .LVU39
 201 003a 0F23     		movs	r3, #15
 202 003c 0193     		str	r3, [sp, #4]
 258:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 203              		.loc 1 258 3 is_stmt 1 view .LVU40
 258:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 204              		.loc 1 258 34 is_stmt 0 view .LVU41
 205 003e 0123     		movs	r3, #1
 206 0040 0293     		str	r3, [sp, #8]
 259:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 207              		.loc 1 259 3 is_stmt 1 view .LVU42
 259:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 208              		.loc 1 259 35 is_stmt 0 view .LVU43
 209 0042 0021     		movs	r1, #0
 210 0044 0391     		str	r1, [sp, #12]
 260:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 211              		.loc 1 260 3 is_stmt 1 view .LVU44
 260:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 212              		.loc 1 260 36 is_stmt 0 view .LVU45
 213 0046 0491     		str	r1, [sp, #16]
 261:Core/Src/main.c **** 
 214              		.loc 1 261 3 is_stmt 1 view .LVU46
 261:Core/Src/main.c **** 
 215              		.loc 1 261 36 is_stmt 0 view .LVU47
 216 0048 0591     		str	r1, [sp, #20]
 263:Core/Src/main.c ****   {
 217              		.loc 1 263 3 is_stmt 1 view .LVU48
 263:Core/Src/main.c ****   {
 218              		.loc 1 263 7 is_stmt 0 view .LVU49
 219 004a 01A8     		add	r0, sp, #4
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 14


 220 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 221              	.LVL12:
 263:Core/Src/main.c ****   {
 222              		.loc 1 263 6 view .LVU50
 223 0050 18B9     		cbnz	r0, .L15
 267:Core/Src/main.c **** 
 224              		.loc 1 267 1 view .LVU51
 225 0052 14B0     		add	sp, sp, #80
 226              	.LCFI3:
 227              		.cfi_remember_state
 228              		.cfi_def_cfa_offset 8
 229              		@ sp needed
 230 0054 10BD     		pop	{r4, pc}
 231              	.L14:
 232              	.LCFI4:
 233              		.cfi_restore_state
 251:Core/Src/main.c ****   }
 234              		.loc 1 251 5 is_stmt 1 view .LVU52
 235 0056 FFF7FEFF 		bl	Error_Handler
 236              	.LVL13:
 237              	.L15:
 265:Core/Src/main.c ****   }
 238              		.loc 1 265 5 view .LVU53
 239 005a FFF7FEFF 		bl	Error_Handler
 240              	.LVL14:
 241              		.cfi_endproc
 242              	.LFE137:
 244              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 245              		.align	2
 246              	.LC1:
 247 0000 73746572 		.ascii	"sterownik silnikami\015\012\000"
 247      6F776E69 
 247      6B207369 
 247      6C6E696B 
 247      616D690D 
 248 0016 0000     		.align	2
 249              	.LC2:
 250 0018 2068616C 		.ascii	" hal transmit\015\012\000"
 250      20747261 
 250      6E736D69 
 250      740D0A00 
 251              		.align	2
 252              	.LC0:
 253 0028 6B757061 		.ascii	"kupa: \000"
 253      3A2000
 254              		.section	.text.main,"ax",%progbits
 255              		.align	1
 256              		.global	main
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 261              	main:
 262              	.LFB136:
  99:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 263              		.loc 1 99 1 view -0
 264              		.cfi_startproc
 265              		@ Volatile: function does not return.
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 15


 266              		@ args = 0, pretend = 0, frame = 48
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 00B5     		push	{lr}
 269              	.LCFI5:
 270              		.cfi_def_cfa_offset 4
 271              		.cfi_offset 14, -4
 272 0002 8DB0     		sub	sp, sp, #52
 273              	.LCFI6:
 274              		.cfi_def_cfa_offset 56
 106:Core/Src/main.c **** 
 275              		.loc 1 106 3 view .LVU55
 276 0004 FFF7FEFF 		bl	HAL_Init
 277              	.LVL15:
 113:Core/Src/main.c **** 
 278              		.loc 1 113 3 view .LVU56
 279 0008 FFF7FEFF 		bl	SystemClock_Config
 280              	.LVL16:
 120:Core/Src/main.c ****   MX_TIM1_Init();
 281              		.loc 1 120 3 view .LVU57
 282 000c FFF7FEFF 		bl	MX_GPIO_Init
 283              	.LVL17:
 121:Core/Src/main.c ****   MX_USART2_UART_Init();
 284              		.loc 1 121 3 view .LVU58
 285 0010 FFF7FEFF 		bl	MX_TIM1_Init
 286              	.LVL18:
 122:Core/Src/main.c ****   MX_UART4_Init();
 287              		.loc 1 122 3 view .LVU59
 288 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 289              	.LVL19:
 123:Core/Src/main.c ****   MX_SPI1_Init();
 290              		.loc 1 123 3 view .LVU60
 291 0018 FFF7FEFF 		bl	MX_UART4_Init
 292              	.LVL20:
 124:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 293              		.loc 1 124 3 view .LVU61
 294 001c FFF7FEFF 		bl	MX_SPI1_Init
 295              	.LVL21:
 126:Core/Src/main.c ****   //uint8_t RxData;
 296              		.loc 1 126 3 view .LVU62
 297 0020 FFF7FEFF 		bl	DisableCRC
 298              	.LVL22:
 132:Core/Src/main.c ****   DevSettings.ConvAvg = TMAG5170_CONV_AVG_1x;
 299              		.loc 1 132 3 view .LVU63
 133:Core/Src/main.c ****   DevSettings.MagTempCoef = TMAG5170_MAG_TEMPCO_0;
 300              		.loc 1 133 3 view .LVU64
 133:Core/Src/main.c ****   DevSettings.MagTempCoef = TMAG5170_MAG_TEMPCO_0;
 301              		.loc 1 133 23 is_stmt 0 view .LVU65
 302 0024 0023     		movs	r3, #0
 303 0026 8DF82830 		strb	r3, [sp, #40]
 134:Core/Src/main.c ****   DevSettings.OperatingMode = TMAG5170_OPERATING_MODE_ConfigurationMode;
 304              		.loc 1 134 3 is_stmt 1 view .LVU66
 134:Core/Src/main.c ****   DevSettings.OperatingMode = TMAG5170_OPERATING_MODE_ConfigurationMode;
 305              		.loc 1 134 27 is_stmt 0 view .LVU67
 306 002a 8DF82930 		strb	r3, [sp, #41]
 135:Core/Src/main.c ****   DevSettings.TempChannelEnabled = TMAG5170_T_CH_EN_TempChannelEnabled; 
 307              		.loc 1 135 3 is_stmt 1 view .LVU68
 135:Core/Src/main.c ****   DevSettings.TempChannelEnabled = TMAG5170_T_CH_EN_TempChannelEnabled; 
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 16


 308              		.loc 1 135 29 is_stmt 0 view .LVU69
 309 002e 8DF82A30 		strb	r3, [sp, #42]
 136:Core/Src/main.c ****   DevSettings.TempRate = TMAG5170_T_RATE_sameAsOtherSensors;
 310              		.loc 1 136 3 is_stmt 1 view .LVU70
 136:Core/Src/main.c ****   DevSettings.TempRate = TMAG5170_T_RATE_sameAsOtherSensors;
 311              		.loc 1 136 34 is_stmt 0 view .LVU71
 312 0032 0122     		movs	r2, #1
 313 0034 8DF82B20 		strb	r2, [sp, #43]
 137:Core/Src/main.c ****   DevSettings.TempChannelEnabled = TMAG5170_T_HLT_EN_tempLimitCheckOff;
 314              		.loc 1 137 3 is_stmt 1 view .LVU72
 137:Core/Src/main.c ****   DevSettings.TempChannelEnabled = TMAG5170_T_HLT_EN_tempLimitCheckOff;
 315              		.loc 1 137 24 is_stmt 0 view .LVU73
 316 0038 8DF82C30 		strb	r3, [sp, #44]
 138:Core/Src/main.c **** 
 317              		.loc 1 138 3 is_stmt 1 view .LVU74
 138:Core/Src/main.c **** 
 318              		.loc 1 138 34 is_stmt 0 view .LVU75
 319 003c 8DF82B30 		strb	r3, [sp, #43]
 142:Core/Src/main.c ****   SensSettings.AngleEnabled = TMAG5170_ANGLE_EN_X_Y;
 320              		.loc 1 142 3 is_stmt 1 view .LVU76
 143:Core/Src/main.c ****   SensSettings.SleepTime = TMAG5170_SLEEPTIME_1ms;
 321              		.loc 1 143 3 view .LVU77
 143:Core/Src/main.c ****   SensSettings.SleepTime = TMAG5170_SLEEPTIME_1ms;
 322              		.loc 1 143 29 is_stmt 0 view .LVU78
 323 0040 8DF82020 		strb	r2, [sp, #32]
 144:Core/Src/main.c ****   SensSettings.MagChannelEnabled = TMAG5170_MAG_CH_EN_XY;
 324              		.loc 1 144 3 is_stmt 1 view .LVU79
 144:Core/Src/main.c ****   SensSettings.MagChannelEnabled = TMAG5170_MAG_CH_EN_XY;
 325              		.loc 1 144 26 is_stmt 0 view .LVU80
 326 0044 8DF82130 		strb	r3, [sp, #33]
 145:Core/Src/main.c ****   SensSettings.Zrange = TMAG5170_Z_RANGE_50mT;
 327              		.loc 1 145 3 is_stmt 1 view .LVU81
 145:Core/Src/main.c ****   SensSettings.Zrange = TMAG5170_Z_RANGE_50mT;
 328              		.loc 1 145 34 is_stmt 0 view .LVU82
 329 0048 0321     		movs	r1, #3
 330 004a 8DF82210 		strb	r1, [sp, #34]
 146:Core/Src/main.c ****   SensSettings.Yrange = TMAG5170_Y_RANGE_50mT;
 331              		.loc 1 146 3 is_stmt 1 view .LVU83
 146:Core/Src/main.c ****   SensSettings.Yrange = TMAG5170_Y_RANGE_50mT;
 332              		.loc 1 146 23 is_stmt 0 view .LVU84
 333 004e 8DF82330 		strb	r3, [sp, #35]
 147:Core/Src/main.c ****   SensSettings.Xrange = TMAG5170_X_RANGE_50mT;
 334              		.loc 1 147 3 is_stmt 1 view .LVU85
 147:Core/Src/main.c ****   SensSettings.Xrange = TMAG5170_X_RANGE_50mT;
 335              		.loc 1 147 23 is_stmt 0 view .LVU86
 336 0052 8DF82430 		strb	r3, [sp, #36]
 148:Core/Src/main.c **** 
 337              		.loc 1 148 3 is_stmt 1 view .LVU87
 148:Core/Src/main.c **** 
 338              		.loc 1 148 23 is_stmt 0 view .LVU88
 339 0056 8DF82530 		strb	r3, [sp, #37]
 151:Core/Src/main.c ****   SystemSettings.DiagnosticSelect = TMAG5170_DIAG_SEL_AllDataPathTogether;
 340              		.loc 1 151 3 is_stmt 1 view .LVU89
 152:Core/Src/main.c ****   SystemSettings.TriggerMode = TMAG5170_TRIGGER_MODE_nCSpulse;
 341              		.loc 1 152 3 view .LVU90
 152:Core/Src/main.c ****   SystemSettings.TriggerMode = TMAG5170_TRIGGER_MODE_nCSpulse;
 342              		.loc 1 152 35 is_stmt 0 view .LVU91
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 17


 343 005a 8DF81830 		strb	r3, [sp, #24]
 153:Core/Src/main.c ****   SystemSettings.DataType = TMAG5170_DATA_TYPE_32bit;
 344              		.loc 1 153 3 is_stmt 1 view .LVU92
 153:Core/Src/main.c ****   SystemSettings.DataType = TMAG5170_DATA_TYPE_32bit;
 345              		.loc 1 153 30 is_stmt 0 view .LVU93
 346 005e 8DF81920 		strb	r2, [sp, #25]
 154:Core/Src/main.c ****   SystemSettings.DiagnosticEnabled = TMAG5170_DIAG_EN_AFEdiagnosticsDisabled;
 347              		.loc 1 154 3 is_stmt 1 view .LVU94
 154:Core/Src/main.c ****   SystemSettings.DiagnosticEnabled = TMAG5170_DIAG_EN_AFEdiagnosticsDisabled;
 348              		.loc 1 154 27 is_stmt 0 view .LVU95
 349 0062 8DF81A30 		strb	r3, [sp, #26]
 155:Core/Src/main.c ****   SystemSettings.ZlimitCheck = TMAG5170_Z_HLT_EN_ZaxisLimitCheckOff;
 350              		.loc 1 155 3 is_stmt 1 view .LVU96
 155:Core/Src/main.c ****   SystemSettings.ZlimitCheck = TMAG5170_Z_HLT_EN_ZaxisLimitCheckOff;
 351              		.loc 1 155 36 is_stmt 0 view .LVU97
 352 0066 8DF81B30 		strb	r3, [sp, #27]
 156:Core/Src/main.c ****   SystemSettings.YlimitCheck = TMAG5170_Y_HLT_EN_YaxisLimitCheckOff;
 353              		.loc 1 156 3 is_stmt 1 view .LVU98
 156:Core/Src/main.c ****   SystemSettings.YlimitCheck = TMAG5170_Y_HLT_EN_YaxisLimitCheckOff;
 354              		.loc 1 156 30 is_stmt 0 view .LVU99
 355 006a 8DF81C30 		strb	r3, [sp, #28]
 157:Core/Src/main.c ****   SystemSettings.XlimitCheck = TMAG5170_X_HLT_EN_XaxisLimitCheckOff;
 356              		.loc 1 157 3 is_stmt 1 view .LVU100
 157:Core/Src/main.c ****   SystemSettings.XlimitCheck = TMAG5170_X_HLT_EN_XaxisLimitCheckOff;
 357              		.loc 1 157 30 is_stmt 0 view .LVU101
 358 006e 8DF81D30 		strb	r3, [sp, #29]
 158:Core/Src/main.c **** 
 359              		.loc 1 158 3 is_stmt 1 view .LVU102
 158:Core/Src/main.c **** 
 360              		.loc 1 158 30 is_stmt 0 view .LVU103
 361 0072 8DF81E30 		strb	r3, [sp, #30]
 161:Core/Src/main.c ****   AlertSettings.AlertStatus = TMAG5170_STATUS_ALRT_IsAsserted;
 362              		.loc 1 161 3 is_stmt 1 view .LVU104
 162:Core/Src/main.c **** 
 363              		.loc 1 162 3 view .LVU105
 162:Core/Src/main.c **** 
 364              		.loc 1 162 29 is_stmt 0 view .LVU106
 365 0076 8DF80E20 		strb	r2, [sp, #14]
 173:Core/Src/main.c ****   // float temperature = 0.0;
 366              		.loc 1 173 3 is_stmt 1 view .LVU107
 173:Core/Src/main.c ****   // float temperature = 0.0;
 367              		.loc 1 173 8 is_stmt 0 view .LVU108
 368 007a 194B     		ldr	r3, .L19
 369 007c 93E80300 		ldm	r3, {r0, r1}
 370 0080 0190     		str	r0, [sp, #4]
 371 0082 ADF80810 		strh	r1, [sp, #8]	@ movhi
 372 0086 090C     		lsrs	r1, r1, #16
 373 0088 8DF80A10 		strb	r1, [sp, #10]
 177:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)"sterownik silnikami\r\n", strlen("sterownik silnikami\r\n")
 374              		.loc 1 177 3 is_stmt 1 view .LVU109
 375 008c 154C     		ldr	r4, .L19+4
 376 008e 1649     		ldr	r1, .L19+8
 377 0090 2046     		mov	r0, r4
 378 0092 FFF7FEFF 		bl	HAL_UART_Receive_IT
 379              	.LVL23:
 178:Core/Src/main.c ****   /* USER CODE END 2 */
 380              		.loc 1 178 3 view .LVU110
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 18


 381 0096 C823     		movs	r3, #200
 382 0098 1522     		movs	r2, #21
 383 009a 1449     		ldr	r1, .L19+12
 384 009c 2046     		mov	r0, r4
 385 009e FFF7FEFF 		bl	HAL_UART_Transmit
 386              	.LVL24:
 387              	.L17:
 183:Core/Src/main.c ****   {
 388              		.loc 1 183 3 discriminator 1 view .LVU111
 188:Core/Src/main.c ****     TMAG5170_dev_conf_settings(&DevSettings);
 389              		.loc 1 188 5 discriminator 1 view .LVU112
 390 00a2 FFF7FEFF 		bl	DisableCRC
 391              	.LVL25:
 189:Core/Src/main.c ****     TMAG5170_sens_conf_settings(&SensSettings);
 392              		.loc 1 189 5 discriminator 1 view .LVU113
 393 00a6 0AA8     		add	r0, sp, #40
 394 00a8 FFF7FEFF 		bl	TMAG5170_dev_conf_settings
 395              	.LVL26:
 190:Core/Src/main.c ****     TMAG5170_sys_conf_settings(&SystemSettings);
 396              		.loc 1 190 5 discriminator 1 view .LVU114
 397 00ac 08A8     		add	r0, sp, #32
 398 00ae FFF7FEFF 		bl	TMAG5170_sens_conf_settings
 399              	.LVL27:
 191:Core/Src/main.c ****     TMAG5170_al_conf_settings(&AlertSettings);
 400              		.loc 1 191 5 discriminator 1 view .LVU115
 401 00b2 06A8     		add	r0, sp, #24
 402 00b4 FFF7FEFF 		bl	TMAG5170_sys_conf_settings
 403              	.LVL28:
 192:Core/Src/main.c ****     //ReadRegister();
 404              		.loc 1 192 5 discriminator 1 view .LVU116
 405 00b8 03A8     		add	r0, sp, #12
 406 00ba FFF7FEFF 		bl	TMAG5170_al_conf_settings
 407              	.LVL29:
 200:Core/Src/main.c ****     // temperature = GetTemp();
 408              		.loc 1 200 5 discriminator 1 view .LVU117
 409 00be FFF7FEFF 		bl	GetAngle
 410              	.LVL30:
 213:Core/Src/main.c ****     HAL_Delay(1000);
 411              		.loc 1 213 5 discriminator 1 view .LVU118
 412 00c2 4FF0FF33 		mov	r3, #-1
 413 00c6 0F22     		movs	r2, #15
 414 00c8 0949     		ldr	r1, .L19+16
 415 00ca 0648     		ldr	r0, .L19+4
 416 00cc FFF7FEFF 		bl	HAL_UART_Transmit
 417              	.LVL31:
 214:Core/Src/main.c **** 
 418              		.loc 1 214 5 discriminator 1 view .LVU119
 419 00d0 4FF47A70 		mov	r0, #1000
 420 00d4 FFF7FEFF 		bl	HAL_Delay
 421              	.LVL32:
 219:Core/Src/main.c **** 
 422              		.loc 1 219 5 discriminator 1 view .LVU120
 423 00d8 6420     		movs	r0, #100
 424 00da FFF7FEFF 		bl	HAL_Delay
 425              	.LVL33:
 183:Core/Src/main.c ****   {
 426              		.loc 1 183 9 discriminator 1 view .LVU121
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 19


 427 00de E0E7     		b	.L17
 428              	.L20:
 429              		.align	2
 430              	.L19:
 431 00e0 28000000 		.word	.LC0
 432 00e4 00000000 		.word	huart2
 433 00e8 00000000 		.word	.LANCHOR0
 434 00ec 00000000 		.word	.LC1
 435 00f0 18000000 		.word	.LC2
 436              		.cfi_endproc
 437              	.LFE136:
 439              		.global	data
 440              		.global	count
 441              		.section	.bss.data,"aw",%nobits
 442              		.set	.LANCHOR0,. + 0
 445              	data:
 446 0000 00       		.space	1
 447              		.section	.data.count,"aw"
 448              		.align	1
 451              	count:
 452 0000 D007     		.short	2000
 453              		.text
 454              	.Letext0:
 455              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 456              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 457              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g491xx.h"
 458              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 459              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 460              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 461              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 462              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 463              		.file 11 "Core/Inc/tim.h"
 464              		.file 12 "Core/Inc/usart.h"
 465              		.file 13 "Core/Inc/TMAG5170.h"
 466              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 467              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 468              		.file 16 "Core/Inc/gpio.h"
 469              		.file 17 "Core/Inc/spi.h"
 470              		.file 18 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 471              		.file 19 "<built-in>"
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:20     .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:26     .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:92     .text.HAL_UART_RxCpltCallback:00000044 $d
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:100    .text.Error_Handler:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:106    .text.Error_Handler:00000000 Error_Handler
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:138    .text.SystemClock_Config:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:144    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:245    .rodata.main.str1.4:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:255    .text.main:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:261    .text.main:00000000 main
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:431    .text.main:000000e0 $d
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:445    .bss.data:00000000 data
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:451    .data.count:00000000 count
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:446    .bss.data:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccdhFLcf.s:448    .data.count:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_TIM_PWM_Stop
HAL_UART_Receive_IT
HAL_TIM_PWM_Start
htim1
huart2
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM1_Init
MX_USART2_UART_Init
MX_UART4_Init
MX_SPI1_Init
DisableCRC
HAL_UART_Transmit
TMAG5170_dev_conf_settings
TMAG5170_sens_conf_settings
TMAG5170_sys_conf_settings
TMAG5170_al_conf_settings
GetAngle
HAL_Delay
