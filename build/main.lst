ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_steering_period,"ax",%progbits
  20              		.align	1
  21              		.global	PWM_steering_period
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	PWM_steering_period:
  27              	.LVL0:
  28              	.LFB135:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "spi.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #include <string.h>
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 2


  30:Core/Src/main.c **** #include <stdio.h>
  31:Core/Src/main.c **** #include <stdbool.h>
  32:Core/Src/main.c **** #include "tmag5170.h"
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END Includes */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PTD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** #define ENCODER_CS ((uint8_t) 0x00)
  47:Core/Src/main.c **** #define ENCODER_CP ((uint8_t) 0x01)
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PD */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  52:Core/Src/main.c **** /* USER CODE BEGIN PM */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PM */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE BEGIN PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** uint8_t data[6];
  61:Core/Src/main.c **** //uint32_t ilosc_krokow = 1600;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** char motorCS[2] = {'C', 'S'};
  64:Core/Src/main.c **** char motorCP[2] = {'C', 'P'};
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** float AbsoluteAngleCS = 0;
  68:Core/Src/main.c **** float AbsoluteAngleCP = 0;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** bool isInterrupt = false;
  72:Core/Src/main.c **** bool wasInterrupt = false;
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** uint8_t directionOfRotation = 0;
  75:Core/Src/main.c **** char kat_obrotu[3]; 
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** char motor[2];
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** float FirstAngle = 0.0;
  80:Core/Src/main.c **** float SecondAngle = 0.0;
  81:Core/Src/main.c **** float AngleDifference = 0.0;
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** uint8_t WhichRotation = 0;
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** uint8_t IsInRange = 0;
  86:Core/Src/main.c **** 
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 3


  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* USER CODE END PV */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  92:Core/Src/main.c **** void SystemClock_Config(void);
  93:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** void PWM_steering_period(float kroki_funkcja)
  96:Core/Src/main.c **** {
  30              		.loc 1 96 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 96 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  97:Core/Src/main.c ****   //================================================DISCLAIMER=====================================
  98:Core/Src/main.c ****   // tą funkcje bym przerobił w taki sposob, zeby nie mierzyla czasu tylko liczyla konkretne okre
  99:Core/Src/main.c ****   // i po wykonaniu okreslonej wartosci okresow zatrzymuje timer
 100:Core/Src/main.c ****   //===============================================================================================
 101:Core/Src/main.c ****   
 102:Core/Src/main.c ****   float okres = 0.0;
  40              		.loc 1 102 3 is_stmt 1 view .LVU2
  41              	.LVL1:
 103:Core/Src/main.c ****   float czas_delay = 0.0;
  42              		.loc 1 103 3 view .LVU3
 104:Core/Src/main.c ****   //T = (PRS + 1)(ARR +1) / f        PRS- preskaler, ARR- period
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   okres = ((float)htim1.Init.Period + 1) * ((float)htim1.Init.Prescaler + 1)/(float)16e6;
  43              		.loc 1 106 3 view .LVU4
  44              		.loc 1 106 29 is_stmt 0 view .LVU5
  45 0002 114B     		ldr	r3, .L3
  46              		.loc 1 106 12 view .LVU6
  47 0004 D3ED037A 		vldr.32	s15, [r3, #12]	@ int
  48 0008 F8EE677A 		vcvt.f32.u32	s15, s15
  49              		.loc 1 106 37 view .LVU7
  50 000c F7EE006A 		vmov.f32	s13, #1.0e+0
  51 0010 37EEA67A 		vadd.f32	s14, s15, s13
  52              		.loc 1 106 62 view .LVU8
  53 0014 D3ED017A 		vldr.32	s15, [r3, #4]	@ int
  54              		.loc 1 106 45 view .LVU9
  55 0018 F8EE677A 		vcvt.f32.u32	s15, s15
  56              		.loc 1 106 73 view .LVU10
  57 001c 77EEA67A 		vadd.f32	s15, s15, s13
  58              		.loc 1 106 42 view .LVU11
  59 0020 67EE277A 		vmul.f32	s15, s14, s15
  60              		.loc 1 106 9 view .LVU12
  61 0024 DFED096A 		vldr.32	s13, .L3+4
  62 0028 87EEA67A 		vdiv.f32	s14, s15, s13
  63              	.LVL2:
 107:Core/Src/main.c ****   //okres = 1/(float)1600;
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   czas_delay = okres * kroki_funkcja * 1000;
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 4


  64              		.loc 1 109 3 is_stmt 1 view .LVU13
  65              		.loc 1 109 22 is_stmt 0 view .LVU14
  66 002c 27EE007A 		vmul.f32	s14, s14, s0
  67              	.LVL3:
  68              		.loc 1 109 14 view .LVU15
  69 0030 9FED070A 		vldr.32	s0, .L3+8
  70              	.LVL4:
  71              		.loc 1 109 14 view .LVU16
  72 0034 27EE007A 		vmul.f32	s14, s14, s0
  73              	.LVL5:
 110:Core/Src/main.c ****   ///delay(czas_delay);
 111:Core/Src/main.c ****   HAL_Delay(czas_delay);
  74              		.loc 1 111 3 is_stmt 1 view .LVU17
  75 0038 FCEEC77A 		vcvt.u32.f32	s15, s14
  76              	.LVL6:
  77              		.loc 1 111 3 is_stmt 0 view .LVU18
  78 003c 17EE900A 		vmov	r0, s15	@ int
  79 0040 FFF7FEFF 		bl	HAL_Delay
  80              	.LVL7:
 112:Core/Src/main.c **** }
  81              		.loc 1 112 1 view .LVU19
  82 0044 08BD     		pop	{r3, pc}
  83              	.L4:
  84 0046 00BF     		.align	2
  85              	.L3:
  86 0048 00000000 		.word	htim1
  87 004c 0024744B 		.word	1265902592
  88 0050 00007A44 		.word	1148846080
  89              		.cfi_endproc
  90              	.LFE135:
  92              		.global	__aeabi_f2d
  93              		.global	__aeabi_ddiv
  94              		.global	__aeabi_d2f
  95              		.section	.text.angleToSteps,"ax",%progbits
  96              		.align	1
  97              		.global	angleToSteps
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	angleToSteps:
 103              	.LVL8:
 104              	.LFB136:
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** float angleToSteps(uint16_t angle)
 115:Core/Src/main.c **** { 
 105              		.loc 1 115 1 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		.loc 1 115 1 is_stmt 0 view .LVU21
 110 0000 08B5     		push	{r3, lr}
 111              	.LCFI1:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 3, -8
 114              		.cfi_offset 14, -4
 115 0002 07EE900A 		vmov	s15, r0	@ int
 116:Core/Src/main.c ****   //----------------------
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 5


 117:Core/Src/main.c ****   // tutaj zwracana wartość powinna być całkowita
 118:Core/Src/main.c ****   //----------------------
 119:Core/Src/main.c ****   
 120:Core/Src/main.c ****   float steps = 0;
 116              		.loc 1 120 3 is_stmt 1 view .LVU22
 117              	.LVL9:
 121:Core/Src/main.c ****  
 122:Core/Src/main.c ****   // TMC2209 is set to 8 microsteps
 123:Core/Src/main.c ****   // motor has 1.8 degree for 1 step
 124:Core/Src/main.c ****   // for 360 degree:
 125:Core/Src/main.c ****   // (360/1.8)*8 = 1600 steps
 126:Core/Src/main.c ****   // 360/1600 = 0,225 =>
 127:Core/Src/main.c ****   // each microstep is 0,225 degree
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   steps = (float)angle/0.225;
 118              		.loc 1 129 3 view .LVU23
 119              		.loc 1 129 11 is_stmt 0 view .LVU24
 120 0006 F8EE677A 		vcvt.f32.u32	s15, s15
 121 000a 17EE900A 		vmov	r0, s15
 122              	.LVL10:
 123              		.loc 1 129 11 view .LVU25
 124 000e FFF7FEFF 		bl	__aeabi_f2d
 125              	.LVL11:
 126              		.loc 1 129 23 view .LVU26
 127 0012 05A3     		adr	r3, .L7
 128 0014 D3E90023 		ldrd	r2, [r3]
 129 0018 FFF7FEFF 		bl	__aeabi_ddiv
 130              	.LVL12:
 131              		.loc 1 129 9 view .LVU27
 132 001c FFF7FEFF 		bl	__aeabi_d2f
 133              	.LVL13:
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   return steps;
 134              		.loc 1 131 3 is_stmt 1 view .LVU28
 132:Core/Src/main.c **** } 
 135              		.loc 1 132 1 is_stmt 0 view .LVU29
 136 0020 00EE100A 		vmov	s0, r0
 137 0024 08BD     		pop	{r3, pc}
 138              	.L8:
 139 0026 00BF     		.align	3
 140              	.L7:
 141 0028 CDCCCCCC 		.word	-858993459
 142 002c CCCCCC3F 		.word	1070386380
 143              		.cfi_endproc
 144              	.LFE136:
 146              		.section	.text.directionRead,"ax",%progbits
 147              		.align	1
 148              		.global	directionRead
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 153              	directionRead:
 154              	.LVL14:
 155              	.LFB137:
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** void directionRead(uint8_t data[6])
 135:Core/Src/main.c **** {
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 6


 156              		.loc 1 135 1 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 136:Core/Src/main.c ****   
 137:Core/Src/main.c ****   char direction = (char)data[2];
 161              		.loc 1 137 3 view .LVU31
 162              		.loc 1 137 8 is_stmt 0 view .LVU32
 163 0000 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 164              	.LVL15:
 138:Core/Src/main.c ****   
 139:Core/Src/main.c ****   // Left
 140:Core/Src/main.c ****   if(direction == 'L')
 165              		.loc 1 140 3 is_stmt 1 view .LVU33
 166              		.loc 1 140 5 is_stmt 0 view .LVU34
 167 0002 4C2B     		cmp	r3, #76
 168 0004 02D0     		beq	.L12
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     directionOfRotation = 0;
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c ****   // Right
 145:Core/Src/main.c ****   else if ((char*)data[2] == 'R')
 169              		.loc 1 145 8 is_stmt 1 view .LVU35
 170              		.loc 1 145 11 is_stmt 0 view .LVU36
 171 0006 522B     		cmp	r3, #82
 172 0008 04D0     		beq	.L13
 173              	.LVL16:
 174              	.L9:
 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     directionOfRotation = 1;
 148:Core/Src/main.c ****   }
 149:Core/Src/main.c **** }
 175              		.loc 1 149 1 view .LVU37
 176 000a 7047     		bx	lr
 177              	.LVL17:
 178              	.L12:
 142:Core/Src/main.c ****   }
 179              		.loc 1 142 5 is_stmt 1 view .LVU38
 142:Core/Src/main.c ****   }
 180              		.loc 1 142 25 is_stmt 0 view .LVU39
 181 000c 034B     		ldr	r3, .L14
 182              	.LVL18:
 142:Core/Src/main.c ****   }
 183              		.loc 1 142 25 view .LVU40
 184 000e 0022     		movs	r2, #0
 185 0010 1A70     		strb	r2, [r3]
 186 0012 7047     		bx	lr
 187              	.LVL19:
 188              	.L13:
 147:Core/Src/main.c ****   }
 189              		.loc 1 147 5 is_stmt 1 view .LVU41
 147:Core/Src/main.c ****   }
 190              		.loc 1 147 25 is_stmt 0 view .LVU42
 191 0014 014B     		ldr	r3, .L14
 192              	.LVL20:
 147:Core/Src/main.c ****   }
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 7


 193              		.loc 1 147 25 view .LVU43
 194 0016 0122     		movs	r2, #1
 195 0018 1A70     		strb	r2, [r3]
 196              		.loc 1 149 1 view .LVU44
 197 001a F6E7     		b	.L9
 198              	.L15:
 199              		.align	2
 200              	.L14:
 201 001c 00000000 		.word	.LANCHOR0
 202              		.cfi_endproc
 203              	.LFE137:
 205              		.section	.text.motorRotation,"ax",%progbits
 206              		.align	1
 207              		.global	motorRotation
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 212              	motorRotation:
 213              	.LVL21:
 214              	.LFB138:
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** void motorRotation(char whichMotor[2], uint8_t direction, uint16_t angle)
 152:Core/Src/main.c **** {
 215              		.loc 1 152 1 is_stmt 1 view -0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              		.loc 1 152 1 is_stmt 0 view .LVU46
 220 0000 70B5     		push	{r4, r5, r6, lr}
 221              	.LCFI2:
 222              		.cfi_def_cfa_offset 16
 223              		.cfi_offset 4, -16
 224              		.cfi_offset 5, -12
 225              		.cfi_offset 6, -8
 226              		.cfi_offset 14, -4
 227 0002 0446     		mov	r4, r0
 228 0004 0D46     		mov	r5, r1
 229 0006 1646     		mov	r6, r2
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   uint16_t FirstAngle;
 230              		.loc 1 154 3 is_stmt 1 view .LVU47
 155:Core/Src/main.c ****   uint16_t SecondAngle;
 231              		.loc 1 155 3 view .LVU48
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   
 158:Core/Src/main.c ****   if(strncmp(whichMotor, motorCS, 2) == 0)
 232              		.loc 1 158 3 view .LVU49
 233              		.loc 1 158 6 is_stmt 0 view .LVU50
 234 0008 0222     		movs	r2, #2
 235              	.LVL22:
 236              		.loc 1 158 6 view .LVU51
 237 000a 1F49     		ldr	r1, .L23
 238              	.LVL23:
 239              		.loc 1 158 6 view .LVU52
 240 000c FFF7FEFF 		bl	strncmp
 241              	.LVL24:
 242              		.loc 1 158 5 view .LVU53
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 8


 243 0010 F0B1     		cbz	r0, .L22
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     HAL_GPIO_WritePin(DIR_TMC1_GPIO_Port, DIR_TMC1_Pin, direction);
 161:Core/Src/main.c ****     
 162:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 2500);
 163:Core/Src/main.c ****     
 164:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****     PWM_steering_period(angleToSteps(angle));
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****     HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_2);
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c ****   else if (strncmp(whichMotor, motorCP, 2) == 0)
 244              		.loc 1 171 8 is_stmt 1 view .LVU54
 245              		.loc 1 171 12 is_stmt 0 view .LVU55
 246 0012 0222     		movs	r2, #2
 247 0014 1D49     		ldr	r1, .L23+4
 248 0016 2046     		mov	r0, r4
 249 0018 FFF7FEFF 		bl	strncmp
 250              	.LVL25:
 251              		.loc 1 171 11 view .LVU56
 252 001c B8B9     		cbnz	r0, .L16
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     if (direction == 0)
 253              		.loc 1 173 5 is_stmt 1 view .LVU57
 254              		.loc 1 173 8 is_stmt 0 view .LVU58
 255 001e 8DBB     		cbnz	r5, .L20
 174:Core/Src/main.c ****     direction = 1;
 256              		.loc 1 174 15 view .LVU59
 257 0020 0122     		movs	r2, #1
 258              	.L19:
 259              	.LVL26:
 175:Core/Src/main.c ****     else
 176:Core/Src/main.c ****     direction = 0;
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****     HAL_GPIO_WritePin(DIR_TMC2_GPIO_Port, DIR_TMC2_Pin, direction);
 260              		.loc 1 178 5 is_stmt 1 view .LVU60
 261 0022 0221     		movs	r1, #2
 262 0024 1A48     		ldr	r0, .L23+8
 263 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 264              	.LVL27:
 179:Core/Src/main.c ****     
 180:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim20, TIM_CHANNEL_1, 2500);
 265              		.loc 1 180 5 view .LVU61
 266 002a 1A4C     		ldr	r4, .L23+12
 267              	.LVL28:
 268              		.loc 1 180 5 is_stmt 0 view .LVU62
 269 002c 2368     		ldr	r3, [r4]
 270 002e 40F6C412 		movw	r2, #2500
 271 0032 5A63     		str	r2, [r3, #52]
 181:Core/Src/main.c ****     
 182:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim20, TIM_CHANNEL_1);
 272              		.loc 1 182 5 is_stmt 1 view .LVU63
 273 0034 0021     		movs	r1, #0
 274 0036 2046     		mov	r0, r4
 275 0038 FFF7FEFF 		bl	HAL_TIM_PWM_Start
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 9


 276              	.LVL29:
 183:Core/Src/main.c ****   
 184:Core/Src/main.c ****     PWM_steering_period(angleToSteps(angle));
 277              		.loc 1 184 5 view .LVU64
 278 003c 3046     		mov	r0, r6
 279 003e FFF7FEFF 		bl	angleToSteps
 280              	.LVL30:
 281 0042 FFF7FEFF 		bl	PWM_steering_period
 282              	.LVL31:
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****     HAL_TIM_PWM_Stop(&htim20, TIM_CHANNEL_1);
 283              		.loc 1 186 5 view .LVU65
 284 0046 0021     		movs	r1, #0
 285 0048 2046     		mov	r0, r4
 286 004a FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 287              	.LVL32:
 288              	.L16:
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c ****   
 189:Core/Src/main.c **** }
 289              		.loc 1 189 1 is_stmt 0 view .LVU66
 290 004e 70BD     		pop	{r4, r5, r6, pc}
 291              	.LVL33:
 292              	.L22:
 160:Core/Src/main.c ****     
 293              		.loc 1 160 5 is_stmt 1 view .LVU67
 294 0050 2A46     		mov	r2, r5
 295 0052 4FF48071 		mov	r1, #256
 296 0056 4FF09040 		mov	r0, #1207959552
 297 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 298              	.LVL34:
 162:Core/Src/main.c ****     
 299              		.loc 1 162 5 view .LVU68
 300 005e 0E4C     		ldr	r4, .L23+16
 301              	.LVL35:
 162:Core/Src/main.c ****     
 302              		.loc 1 162 5 is_stmt 0 view .LVU69
 303 0060 2368     		ldr	r3, [r4]
 304 0062 40F6C412 		movw	r2, #2500
 305 0066 9A63     		str	r2, [r3, #56]
 164:Core/Src/main.c **** 
 306              		.loc 1 164 5 is_stmt 1 view .LVU70
 307 0068 0421     		movs	r1, #4
 308 006a 2046     		mov	r0, r4
 309 006c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 310              	.LVL36:
 166:Core/Src/main.c **** 
 311              		.loc 1 166 5 view .LVU71
 312 0070 3046     		mov	r0, r6
 313 0072 FFF7FEFF 		bl	angleToSteps
 314              	.LVL37:
 315 0076 FFF7FEFF 		bl	PWM_steering_period
 316              	.LVL38:
 168:Core/Src/main.c **** 
 317              		.loc 1 168 5 view .LVU72
 318 007a 0421     		movs	r1, #4
 319 007c 2046     		mov	r0, r4
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 10


 320 007e FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 321              	.LVL39:
 322 0082 E4E7     		b	.L16
 323              	.LVL40:
 324              	.L20:
 176:Core/Src/main.c **** 
 325              		.loc 1 176 15 is_stmt 0 view .LVU73
 326 0084 0022     		movs	r2, #0
 327 0086 CCE7     		b	.L19
 328              	.L24:
 329              		.align	2
 330              	.L23:
 331 0088 00000000 		.word	.LANCHOR1
 332 008c 00000000 		.word	.LANCHOR2
 333 0090 00040048 		.word	1207960576
 334 0094 00000000 		.word	htim20
 335 0098 00000000 		.word	htim1
 336              		.cfi_endproc
 337              	.LFE138:
 339              		.section	.text.CheckAngle,"ax",%progbits
 340              		.align	1
 341              		.global	CheckAngle
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 346              	CheckAngle:
 347              	.LVL41:
 348              	.LFB139:
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** float CheckAngle(float firstAngle, float secondAngle, uint16_t Angle, uint8_t direction)
 192:Core/Src/main.c **** {
 349              		.loc 1 192 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		.loc 1 192 1 is_stmt 0 view .LVU75
 354 0000 08B5     		push	{r3, lr}
 355              	.LCFI3:
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 3, -8
 358              		.cfi_offset 14, -4
 359 0002 2DED028B 		vpush.64	{d8}
 360              	.LCFI4:
 361              		.cfi_def_cfa_offset 16
 362              		.cfi_offset 80, -16
 363              		.cfi_offset 81, -12
 193:Core/Src/main.c ****   float angleDifference = 0;
 364              		.loc 1 193 3 is_stmt 1 view .LVU76
 365              	.LVL42:
 194:Core/Src/main.c ****   if (direction == 0)
 366              		.loc 1 194 3 view .LVU77
 367              		.loc 1 194 6 is_stmt 0 view .LVU78
 368 0006 49B9     		cbnz	r1, .L26
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     angleDifference = secondAngle - firstAngle;
 369              		.loc 1 196 5 is_stmt 1 view .LVU79
 370              		.loc 1 196 21 is_stmt 0 view .LVU80
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 11


 371 0008 30EEC08A 		vsub.f32	s16, s1, s0
 372              	.LVL43:
 373              	.L27:
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c ****   else if (direction == 1)
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     angleDifference = firstAngle - secondAngle;
 201:Core/Src/main.c ****   }
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   HAL_Delay(50);
 374              		.loc 1 203 3 is_stmt 1 view .LVU81
 375 000c 3220     		movs	r0, #50
 376              	.LVL44:
 377              		.loc 1 203 3 is_stmt 0 view .LVU82
 378 000e FFF7FEFF 		bl	HAL_Delay
 379              	.LVL45:
 204:Core/Src/main.c ****   return angleDifference;
 380              		.loc 1 204 3 is_stmt 1 view .LVU83
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** }
 381              		.loc 1 206 1 is_stmt 0 view .LVU84
 382 0012 B0EE480A 		vmov.f32	s0, s16
 383 0016 BDEC028B 		vldm	sp!, {d8}
 384              	.LCFI5:
 385              		.cfi_remember_state
 386              		.cfi_restore 80
 387              		.cfi_restore 81
 388              		.cfi_def_cfa_offset 8
 389              	.LVL46:
 390              		.loc 1 206 1 view .LVU85
 391 001a 08BD     		pop	{r3, pc}
 392              	.LVL47:
 393              	.L26:
 394              	.LCFI6:
 395              		.cfi_restore_state
 198:Core/Src/main.c ****   {
 396              		.loc 1 198 8 is_stmt 1 view .LVU86
 198:Core/Src/main.c ****   {
 397              		.loc 1 198 11 is_stmt 0 view .LVU87
 398 001c 0129     		cmp	r1, #1
 399 001e 02D0     		beq	.L30
 193:Core/Src/main.c ****   if (direction == 0)
 400              		.loc 1 193 9 view .LVU88
 401 0020 9FED028A 		vldr.32	s16, .L31
 402 0024 F2E7     		b	.L27
 403              	.L30:
 200:Core/Src/main.c ****   }
 404              		.loc 1 200 5 is_stmt 1 view .LVU89
 200:Core/Src/main.c ****   }
 405              		.loc 1 200 21 is_stmt 0 view .LVU90
 406 0026 30EE608A 		vsub.f32	s16, s0, s1
 407              	.LVL48:
 200:Core/Src/main.c ****   }
 408              		.loc 1 200 21 view .LVU91
 409 002a EFE7     		b	.L27
 410              	.L32:
 411              		.align	2
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 12


 412              	.L31:
 413 002c 00000000 		.word	0
 414              		.cfi_endproc
 415              	.LFE139:
 417              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 418              		.align	1
 419              		.global	HAL_UART_RxCpltCallback
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 424              	HAL_UART_RxCpltCallback:
 425              	.LVL49:
 426              	.LFB140:
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 209:Core/Src/main.c **** {
 427              		.loc 1 209 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		.loc 1 209 1 is_stmt 0 view .LVU93
 432 0000 08B5     		push	{r3, lr}
 433              	.LCFI7:
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 3, -8
 436              		.cfi_offset 14, -4
 210:Core/Src/main.c ****   uint8_t Data[40];
 437              		.loc 1 210 3 is_stmt 1 view .LVU94
 211:Core/Src/main.c ****   uint16_t size = 0;
 438              		.loc 1 211 3 view .LVU95
 439              	.LVL50:
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   isInterrupt = !isInterrupt;
 440              		.loc 1 213 3 view .LVU96
 441 0002 054A     		ldr	r2, .L35
 442 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 443 0006 83F00103 		eor	r3, r3, #1
 444              		.loc 1 213 15 is_stmt 0 view .LVU97
 445 000a 1370     		strb	r3, [r2]
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   // dalsze nasluchiwanie UART
 216:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, data, 6);
 446              		.loc 1 216 3 is_stmt 1 view .LVU98
 447 000c 0622     		movs	r2, #6
 448 000e 0349     		ldr	r1, .L35+4
 449 0010 0348     		ldr	r0, .L35+8
 450              	.LVL51:
 451              		.loc 1 216 3 is_stmt 0 view .LVU99
 452 0012 FFF7FEFF 		bl	HAL_UART_Receive_IT
 453              	.LVL52:
 217:Core/Src/main.c **** }
 454              		.loc 1 217 1 view .LVU100
 455 0016 08BD     		pop	{r3, pc}
 456              	.L36:
 457              		.align	2
 458              	.L35:
 459 0018 00000000 		.word	.LANCHOR3
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 13


 460 001c 00000000 		.word	.LANCHOR4
 461 0020 00000000 		.word	huart2
 462              		.cfi_endproc
 463              	.LFE140:
 465              		.section	.text.HallSensorSettings,"ax",%progbits
 466              		.align	1
 467              		.global	HallSensorSettings
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 472              	HallSensorSettings:
 473              	.LFB141:
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** void HallSensorSettings(void)
 220:Core/Src/main.c **** {
 474              		.loc 1 220 1 is_stmt 1 view -0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 40
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478 0000 00B5     		push	{lr}
 479              	.LCFI8:
 480              		.cfi_def_cfa_offset 4
 481              		.cfi_offset 14, -4
 482 0002 8BB0     		sub	sp, sp, #44
 483              	.LCFI9:
 484              		.cfi_def_cfa_offset 48
 221:Core/Src/main.c ****   TMAG5170_DEVICE_CONFIG_settings_t DevSettings;
 485              		.loc 1 221 3 view .LVU102
 222:Core/Src/main.c ****   DevSettings.ConvAvg = TMAG5170_CONV_AVG_1x;
 486              		.loc 1 222 3 view .LVU103
 487              		.loc 1 222 23 is_stmt 0 view .LVU104
 488 0004 0023     		movs	r3, #0
 489 0006 8DF82030 		strb	r3, [sp, #32]
 223:Core/Src/main.c ****   DevSettings.MagTempCoef = TMAG5170_MAG_TEMPCO_0;
 490              		.loc 1 223 3 is_stmt 1 view .LVU105
 491              		.loc 1 223 27 is_stmt 0 view .LVU106
 492 000a 8DF82130 		strb	r3, [sp, #33]
 224:Core/Src/main.c ****   DevSettings.OperatingMode = TMAG5170_OPERATING_MODE_ConfigurationMode;
 493              		.loc 1 224 3 is_stmt 1 view .LVU107
 494              		.loc 1 224 29 is_stmt 0 view .LVU108
 495 000e 8DF82230 		strb	r3, [sp, #34]
 225:Core/Src/main.c ****   DevSettings.TempChannelEnabled = TMAG5170_T_CH_EN_TempChannelEnabled; 
 496              		.loc 1 225 3 is_stmt 1 view .LVU109
 497              		.loc 1 225 34 is_stmt 0 view .LVU110
 498 0012 0122     		movs	r2, #1
 499 0014 8DF82320 		strb	r2, [sp, #35]
 226:Core/Src/main.c ****   DevSettings.TempRate = TMAG5170_T_RATE_sameAsOtherSensors;
 500              		.loc 1 226 3 is_stmt 1 view .LVU111
 501              		.loc 1 226 24 is_stmt 0 view .LVU112
 502 0018 8DF82430 		strb	r3, [sp, #36]
 227:Core/Src/main.c ****   DevSettings.TempChannelEnabled = TMAG5170_T_HLT_EN_tempLimitCheckOff;
 503              		.loc 1 227 3 is_stmt 1 view .LVU113
 504              		.loc 1 227 34 is_stmt 0 view .LVU114
 505 001c 8DF82330 		strb	r3, [sp, #35]
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   
 230:Core/Src/main.c ****   TMAG5170_SENSOR_CONFIG_settings_t SensSettings;
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 14


 506              		.loc 1 230 3 is_stmt 1 view .LVU115
 231:Core/Src/main.c ****   SensSettings.AngleEnabled = TMAG5170_ANGLE_EN_X_Y;
 507              		.loc 1 231 3 view .LVU116
 508              		.loc 1 231 29 is_stmt 0 view .LVU117
 509 0020 8DF81820 		strb	r2, [sp, #24]
 232:Core/Src/main.c ****   SensSettings.SleepTime = TMAG5170_SLEEPTIME_1ms;
 510              		.loc 1 232 3 is_stmt 1 view .LVU118
 511              		.loc 1 232 26 is_stmt 0 view .LVU119
 512 0024 8DF81930 		strb	r3, [sp, #25]
 233:Core/Src/main.c ****   SensSettings.MagChannelEnabled = TMAG5170_MAG_CH_EN_XY;
 513              		.loc 1 233 3 is_stmt 1 view .LVU120
 514              		.loc 1 233 34 is_stmt 0 view .LVU121
 515 0028 0321     		movs	r1, #3
 516 002a 8DF81A10 		strb	r1, [sp, #26]
 234:Core/Src/main.c ****   SensSettings.Zrange = TMAG5170_Z_RANGE_50mT;
 517              		.loc 1 234 3 is_stmt 1 view .LVU122
 518              		.loc 1 234 23 is_stmt 0 view .LVU123
 519 002e 8DF81B30 		strb	r3, [sp, #27]
 235:Core/Src/main.c ****   SensSettings.Yrange = TMAG5170_Y_RANGE_50mT;
 520              		.loc 1 235 3 is_stmt 1 view .LVU124
 521              		.loc 1 235 23 is_stmt 0 view .LVU125
 522 0032 8DF81C30 		strb	r3, [sp, #28]
 236:Core/Src/main.c ****   SensSettings.Xrange = TMAG5170_X_RANGE_50mT;
 523              		.loc 1 236 3 is_stmt 1 view .LVU126
 524              		.loc 1 236 23 is_stmt 0 view .LVU127
 525 0036 8DF81D30 		strb	r3, [sp, #29]
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   TMAG5170_SYSTEM_CONFIG_settings_t SystemSettings;
 526              		.loc 1 239 3 is_stmt 1 view .LVU128
 240:Core/Src/main.c ****   SystemSettings.DiagnosticSelect = TMAG5170_DIAG_SEL_AllDataPathTogether;
 527              		.loc 1 240 3 view .LVU129
 528              		.loc 1 240 35 is_stmt 0 view .LVU130
 529 003a 8DF81030 		strb	r3, [sp, #16]
 241:Core/Src/main.c ****   SystemSettings.TriggerMode = TMAG5170_TRIGGER_MODE_nCSpulse;
 530              		.loc 1 241 3 is_stmt 1 view .LVU131
 531              		.loc 1 241 30 is_stmt 0 view .LVU132
 532 003e 8DF81120 		strb	r2, [sp, #17]
 242:Core/Src/main.c ****   SystemSettings.DataType = TMAG5170_DATA_TYPE_32bit;
 533              		.loc 1 242 3 is_stmt 1 view .LVU133
 534              		.loc 1 242 27 is_stmt 0 view .LVU134
 535 0042 8DF81230 		strb	r3, [sp, #18]
 243:Core/Src/main.c ****   SystemSettings.DiagnosticEnabled = TMAG5170_DIAG_EN_AFEdiagnosticsDisabled;
 536              		.loc 1 243 3 is_stmt 1 view .LVU135
 537              		.loc 1 243 36 is_stmt 0 view .LVU136
 538 0046 8DF81330 		strb	r3, [sp, #19]
 244:Core/Src/main.c ****   SystemSettings.ZlimitCheck = TMAG5170_Z_HLT_EN_ZaxisLimitCheckOff;
 539              		.loc 1 244 3 is_stmt 1 view .LVU137
 540              		.loc 1 244 30 is_stmt 0 view .LVU138
 541 004a 8DF81430 		strb	r3, [sp, #20]
 245:Core/Src/main.c ****   SystemSettings.YlimitCheck = TMAG5170_Y_HLT_EN_YaxisLimitCheckOff;
 542              		.loc 1 245 3 is_stmt 1 view .LVU139
 543              		.loc 1 245 30 is_stmt 0 view .LVU140
 544 004e 8DF81530 		strb	r3, [sp, #21]
 246:Core/Src/main.c ****   SystemSettings.XlimitCheck = TMAG5170_X_HLT_EN_XaxisLimitCheckOff;
 545              		.loc 1 246 3 is_stmt 1 view .LVU141
 546              		.loc 1 246 30 is_stmt 0 view .LVU142
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 15


 547 0052 8DF81630 		strb	r3, [sp, #22]
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   TMAG5170_ALERT_CONFIG_settings_t AlertSettings;
 548              		.loc 1 249 3 is_stmt 1 view .LVU143
 250:Core/Src/main.c ****   AlertSettings.AlertStatus = TMAG5170_STATUS_ALRT_IsAsserted;
 549              		.loc 1 250 3 view .LVU144
 550              		.loc 1 250 29 is_stmt 0 view .LVU145
 551 0056 8DF80620 		strb	r2, [sp, #6]
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   DisableCRC();
 552              		.loc 1 252 3 is_stmt 1 view .LVU146
 553 005a FFF7FEFF 		bl	DisableCRC
 554              	.LVL53:
 253:Core/Src/main.c ****   TMAG5170_dev_conf_settings(&DevSettings);
 555              		.loc 1 253 3 view .LVU147
 556 005e 08A8     		add	r0, sp, #32
 557 0060 FFF7FEFF 		bl	TMAG5170_dev_conf_settings
 558              	.LVL54:
 254:Core/Src/main.c ****   TMAG5170_sens_conf_settings(&SensSettings);
 559              		.loc 1 254 3 view .LVU148
 560 0064 06A8     		add	r0, sp, #24
 561 0066 FFF7FEFF 		bl	TMAG5170_sens_conf_settings
 562              	.LVL55:
 255:Core/Src/main.c ****   TMAG5170_sys_conf_settings(&SystemSettings);
 563              		.loc 1 255 3 view .LVU149
 564 006a 04A8     		add	r0, sp, #16
 565 006c FFF7FEFF 		bl	TMAG5170_sys_conf_settings
 566              	.LVL56:
 256:Core/Src/main.c ****   TMAG5170_al_conf_settings(&AlertSettings);
 567              		.loc 1 256 3 view .LVU150
 568 0070 01A8     		add	r0, sp, #4
 569 0072 FFF7FEFF 		bl	TMAG5170_al_conf_settings
 570              	.LVL57:
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   
 259:Core/Src/main.c **** }
 571              		.loc 1 259 1 is_stmt 0 view .LVU151
 572 0076 0BB0     		add	sp, sp, #44
 573              	.LCFI10:
 574              		.cfi_def_cfa_offset 4
 575              		@ sp needed
 576 0078 5DF804FB 		ldr	pc, [sp], #4
 577              		.cfi_endproc
 578              	.LFE141:
 580              		.section	.rodata.DisplayAngle.str1.4,"aMS",%progbits,1
 581              		.align	2
 582              	.LC0:
 583 0000 416E676C 		.ascii	"Angle: \000"
 583      653A2000 
 584              		.align	2
 585              	.LC1:
 586 0008 256400   		.ascii	"%d\000"
 587 000b 00       		.align	2
 588              	.LC2:
 589 000c 2C00     		.ascii	",\000"
 590 000e 0000     		.align	2
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 16


 591              	.LC3:
 592 0010 0D0A00   		.ascii	"\015\012\000"
 593              		.section	.text.DisplayAngle,"ax",%progbits
 594              		.align	1
 595              		.global	DisplayAngle
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 600              	DisplayAngle:
 601              	.LFB142:
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** void DisplayAngle(void)
 262:Core/Src/main.c **** {
 602              		.loc 1 262 1 is_stmt 1 view -0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 16
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 607              	.LCFI11:
 608              		.cfi_def_cfa_offset 20
 609              		.cfi_offset 4, -20
 610              		.cfi_offset 5, -16
 611              		.cfi_offset 6, -12
 612              		.cfi_offset 7, -8
 613              		.cfi_offset 14, -4
 614 0002 85B0     		sub	sp, sp, #20
 615              	.LCFI12:
 616              		.cfi_def_cfa_offset 40
 263:Core/Src/main.c ****   float Angle;
 617              		.loc 1 263 3 view .LVU153
 264:Core/Src/main.c ****   uint16_t AngleInt = 0;
 618              		.loc 1 264 3 view .LVU154
 619              	.LVL58:
 265:Core/Src/main.c ****   uint16_t AngleInt100 = 0;
 620              		.loc 1 265 3 view .LVU155
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   Angle = Angle + GetAngle();
 621              		.loc 1 267 3 view .LVU156
 622              		.loc 1 267 19 is_stmt 0 view .LVU157
 623 0004 FFF7FEFF 		bl	GetAngle
 624              	.LVL59:
 625              		.loc 1 267 9 view .LVU158
 626 0008 DFED287A 		vldr.32	s15, .L41
 627 000c 30EE270A 		vadd.f32	s0, s0, s15
 628              	.LVL60:
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   
 270:Core/Src/main.c ****   AngleInt = (uint16_t)Angle;
 629              		.loc 1 270 3 is_stmt 1 view .LVU159
 630              		.loc 1 270 12 is_stmt 0 view .LVU160
 631 0010 FCEEC07A 		vcvt.u32.f32	s15, s0
 632 0014 17EE903A 		vmov	r3, s15	@ int
 633 0018 9EB2     		uxth	r6, r3
 634              	.LVL61:
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   Angle = Angle*100 - AngleInt*100;
 635              		.loc 1 272 3 is_stmt 1 view .LVU161
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 17


 636              		.loc 1 272 16 is_stmt 0 view .LVU162
 637 001a DFED257A 		vldr.32	s15, .L41+4
 638 001e 60EE277A 		vmul.f32	s15, s0, s15
 639              		.loc 1 272 31 view .LVU163
 640 0022 6423     		movs	r3, #100
 641 0024 03FB06F3 		mul	r3, r3, r6
 642 0028 00EE103A 		vmov	s0, r3	@ int
 643              	.LVL62:
 644              		.loc 1 272 21 view .LVU164
 645 002c B8EEC00A 		vcvt.f32.s32	s0, s0
 646              		.loc 1 272 9 view .LVU165
 647 0030 37EEC00A 		vsub.f32	s0, s15, s0
 648              	.LVL63:
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   AngleInt100 = (uint16_t)Angle;
 649              		.loc 1 274 3 is_stmt 1 view .LVU166
 650              		.loc 1 274 15 is_stmt 0 view .LVU167
 651 0034 BCEEC00A 		vcvt.u32.f32	s0, s0
 652              	.LVL64:
 653              		.loc 1 274 15 view .LVU168
 654 0038 10EE103A 		vmov	r3, s0	@ int
 655              	.LVL65:
 656              		.loc 1 274 15 view .LVU169
 657 003c 9CB2     		uxth	r4, r3
 658              	.LVL66:
 275:Core/Src/main.c ****   
 276:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, "Angle: ", strlen("Angle: "), HAL_MAX_DELAY);
 659              		.loc 1 276 3 is_stmt 1 view .LVU170
 660 003e 1D4D     		ldr	r5, .L41+8
 661 0040 4FF0FF33 		mov	r3, #-1
 662 0044 0722     		movs	r2, #7
 663 0046 1C49     		ldr	r1, .L41+12
 664 0048 2846     		mov	r0, r5
 665 004a FFF7FEFF 		bl	HAL_UART_Transmit
 666              	.LVL67:
 277:Core/Src/main.c ****   char str1[8];
 667              		.loc 1 277 3 view .LVU171
 278:Core/Src/main.c ****   sprintf(str1, "%d", AngleInt);
 668              		.loc 1 278 3 view .LVU172
 669 004e 1B4F     		ldr	r7, .L41+16
 670 0050 3246     		mov	r2, r6
 671 0052 3946     		mov	r1, r7
 672 0054 02A8     		add	r0, sp, #8
 673 0056 FFF7FEFF 		bl	sprintf
 674              	.LVL68:
 279:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, str1, strlen(str1), HAL_MAX_DELAY);
 675              		.loc 1 279 3 view .LVU173
 676              		.loc 1 279 36 is_stmt 0 view .LVU174
 677 005a 02A8     		add	r0, sp, #8
 678 005c FFF7FEFF 		bl	strlen
 679              	.LVL69:
 680              		.loc 1 279 3 view .LVU175
 681 0060 4FF0FF33 		mov	r3, #-1
 682 0064 82B2     		uxth	r2, r0
 683 0066 02A9     		add	r1, sp, #8
 684 0068 2846     		mov	r0, r5
 685 006a FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 18


 686              	.LVL70:
 280:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, ",", strlen(","), HAL_MAX_DELAY);
 687              		.loc 1 280 3 is_stmt 1 view .LVU176
 688 006e 4FF0FF33 		mov	r3, #-1
 689 0072 0122     		movs	r2, #1
 690 0074 1249     		ldr	r1, .L41+20
 691 0076 2846     		mov	r0, r5
 692 0078 FFF7FEFF 		bl	HAL_UART_Transmit
 693              	.LVL71:
 281:Core/Src/main.c ****   char str2[8];
 694              		.loc 1 281 3 view .LVU177
 282:Core/Src/main.c ****   sprintf(str2, "%d", AngleInt100);
 695              		.loc 1 282 3 view .LVU178
 696 007c 2246     		mov	r2, r4
 697 007e 3946     		mov	r1, r7
 698 0080 6846     		mov	r0, sp
 699 0082 FFF7FEFF 		bl	sprintf
 700              	.LVL72:
 283:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, str2, strlen(str2), HAL_MAX_DELAY);
 701              		.loc 1 283 3 view .LVU179
 702              		.loc 1 283 36 is_stmt 0 view .LVU180
 703 0086 6846     		mov	r0, sp
 704 0088 FFF7FEFF 		bl	strlen
 705              	.LVL73:
 706              		.loc 1 283 3 view .LVU181
 707 008c 4FF0FF33 		mov	r3, #-1
 708 0090 82B2     		uxth	r2, r0
 709 0092 6946     		mov	r1, sp
 710 0094 2846     		mov	r0, r5
 711 0096 FFF7FEFF 		bl	HAL_UART_Transmit
 712              	.LVL74:
 284:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)"\r\n", strlen("\r\n"), HAL_MAX_DELAY);
 713              		.loc 1 284 3 is_stmt 1 view .LVU182
 714 009a 4FF0FF33 		mov	r3, #-1
 715 009e 0222     		movs	r2, #2
 716 00a0 0849     		ldr	r1, .L41+24
 717 00a2 2846     		mov	r0, r5
 718 00a4 FFF7FEFF 		bl	HAL_UART_Transmit
 719              	.LVL75:
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** }
 720              		.loc 1 286 1 is_stmt 0 view .LVU183
 721 00a8 05B0     		add	sp, sp, #20
 722              	.LCFI13:
 723              		.cfi_def_cfa_offset 20
 724              		@ sp needed
 725 00aa F0BD     		pop	{r4, r5, r6, r7, pc}
 726              	.LVL76:
 727              	.L42:
 728              		.loc 1 286 1 view .LVU184
 729              		.align	2
 730              	.L41:
 731 00ac 00000000 		.word	0
 732 00b0 0000C842 		.word	1120403456
 733 00b4 00000000 		.word	huart2
 734 00b8 00000000 		.word	.LC0
 735 00bc 08000000 		.word	.LC1
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 19


 736 00c0 0C000000 		.word	.LC2
 737 00c4 10000000 		.word	.LC3
 738              		.cfi_endproc
 739              	.LFE142:
 741              		.section	.text.CheckAbsoluteAngle,"ax",%progbits
 742              		.align	1
 743              		.global	CheckAbsoluteAngle
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 748              	CheckAbsoluteAngle:
 749              	.LVL77:
 750              	.LFB143:
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** void CheckAbsoluteAngle(uint16_t Angle, uint8_t Direction, char motorSel[2])
 289:Core/Src/main.c **** {
 751              		.loc 1 289 1 is_stmt 1 view -0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 8
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              		.loc 1 289 1 is_stmt 0 view .LVU186
 756 0000 30B5     		push	{r4, r5, lr}
 757              	.LCFI14:
 758              		.cfi_def_cfa_offset 12
 759              		.cfi_offset 4, -12
 760              		.cfi_offset 5, -8
 761              		.cfi_offset 14, -4
 762 0002 83B0     		sub	sp, sp, #12
 763              	.LCFI15:
 764              		.cfi_def_cfa_offset 24
 765 0004 0190     		str	r0, [sp, #4]
 766 0006 0D46     		mov	r5, r1
 767 0008 1446     		mov	r4, r2
 290:Core/Src/main.c ****   uint16_t NewAngleCS = 0;
 768              		.loc 1 290 3 is_stmt 1 view .LVU187
 769              	.LVL78:
 291:Core/Src/main.c ****   uint16_t NewAngleCP = 0;
 770              		.loc 1 291 3 view .LVU188
 292:Core/Src/main.c ****   
 293:Core/Src/main.c ****   
 294:Core/Src/main.c ****   // at the beginning absolute angle is set to 0 degree
 295:Core/Src/main.c ****   if(strncmp(motorSel, motorCS, 2) == 0)
 771              		.loc 1 295 3 view .LVU189
 772              		.loc 1 295 6 is_stmt 0 view .LVU190
 773 000a 0222     		movs	r2, #2
 774              	.LVL79:
 775              		.loc 1 295 6 view .LVU191
 776 000c 3949     		ldr	r1, .L65
 777              	.LVL80:
 778              		.loc 1 295 6 view .LVU192
 779 000e 2046     		mov	r0, r4
 780              	.LVL81:
 781              		.loc 1 295 6 view .LVU193
 782 0010 FFF7FEFF 		bl	strncmp
 783              	.LVL82:
 784              		.loc 1 295 5 view .LVU194
 785 0014 98BB     		cbnz	r0, .L44
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 20


 296:Core/Src/main.c ****   {
 297:Core/Src/main.c ****     if(Direction == 0)
 786              		.loc 1 297 5 is_stmt 1 view .LVU195
 787              		.loc 1 297 7 is_stmt 0 view .LVU196
 788 0016 CDB9     		cbnz	r5, .L45
 298:Core/Src/main.c ****     {
 299:Core/Src/main.c ****       if(AbsoluteAngleCS + Angle < 3600)
 789              		.loc 1 299 7 is_stmt 1 view .LVU197
 790              		.loc 1 299 26 is_stmt 0 view .LVU198
 791 0018 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 792 001c F8EEE77A 		vcvt.f32.s32	s15, s15
 793 0020 354B     		ldr	r3, .L65+4
 794 0022 93ED007A 		vldr.32	s14, [r3]
 795 0026 77EE877A 		vadd.f32	s15, s15, s14
 796              		.loc 1 299 9 view .LVU199
 797 002a 9FED347A 		vldr.32	s14, .L65+8
 798 002e F4EEC77A 		vcmpe.f32	s15, s14
 799 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 800 0036 05D5     		bpl	.L60
 300:Core/Src/main.c ****       {
 301:Core/Src/main.c ****         AbsoluteAngleCS = AbsoluteAngleCS + Angle;
 801              		.loc 1 301 9 is_stmt 1 view .LVU200
 802              		.loc 1 301 25 is_stmt 0 view .LVU201
 803 0038 C3ED007A 		vstr.32	s15, [r3]
 302:Core/Src/main.c ****         IsInRange = 1;
 804              		.loc 1 302 9 is_stmt 1 view .LVU202
 805              		.loc 1 302 19 is_stmt 0 view .LVU203
 806 003c 304B     		ldr	r3, .L65+12
 807 003e 0122     		movs	r2, #1
 808 0040 1A70     		strb	r2, [r3]
 809 0042 16E0     		b	.L43
 810              	.L60:
 303:Core/Src/main.c ****       }
 304:Core/Src/main.c ****       else
 305:Core/Src/main.c ****       IsInRange = 0;
 811              		.loc 1 305 7 is_stmt 1 view .LVU204
 812              		.loc 1 305 17 is_stmt 0 view .LVU205
 813 0044 2E4B     		ldr	r3, .L65+12
 814 0046 0022     		movs	r2, #0
 815 0048 1A70     		strb	r2, [r3]
 816 004a 12E0     		b	.L43
 817              	.L45:
 306:Core/Src/main.c ****     }
 307:Core/Src/main.c ****     else
 308:Core/Src/main.c ****     {
 309:Core/Src/main.c ****       if(AbsoluteAngleCS - Angle > 0)
 818              		.loc 1 309 7 is_stmt 1 view .LVU206
 819              		.loc 1 309 26 is_stmt 0 view .LVU207
 820 004c DDED017A 		vldr.32	s15, [sp, #4]	@ int
 821 0050 B8EEE77A 		vcvt.f32.s32	s14, s15
 822 0054 284B     		ldr	r3, .L65+4
 823 0056 D3ED007A 		vldr.32	s15, [r3]
 824 005a 77EEC77A 		vsub.f32	s15, s15, s14
 825              		.loc 1 309 9 view .LVU208
 826 005e F5EEC07A 		vcmpe.f32	s15, #0
 827 0062 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 828 0066 06DD     		ble	.L61
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 21


 310:Core/Src/main.c ****       {
 311:Core/Src/main.c ****         AbsoluteAngleCS = AbsoluteAngleCS - Angle;
 829              		.loc 1 311 9 is_stmt 1 view .LVU209
 830              		.loc 1 311 25 is_stmt 0 view .LVU210
 831 0068 C3ED007A 		vstr.32	s15, [r3]
 312:Core/Src/main.c ****         IsInRange = 1;
 832              		.loc 1 312 9 is_stmt 1 view .LVU211
 833              		.loc 1 312 19 is_stmt 0 view .LVU212
 834 006c 244B     		ldr	r3, .L65+12
 835 006e 0122     		movs	r2, #1
 836 0070 1A70     		strb	r2, [r3]
 837              	.L43:
 313:Core/Src/main.c ****       }
 314:Core/Src/main.c ****       else
 315:Core/Src/main.c ****       IsInRange = 0;
 316:Core/Src/main.c ****     }
 317:Core/Src/main.c ****   }
 318:Core/Src/main.c ****   else if(strncmp(motorSel, motorCP, 2) == 0)
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     
 321:Core/Src/main.c ****     if(Direction == 0)
 322:Core/Src/main.c ****     {
 323:Core/Src/main.c ****       if(AbsoluteAngleCP + Angle < 3600)
 324:Core/Src/main.c ****       {
 325:Core/Src/main.c ****         AbsoluteAngleCP = AbsoluteAngleCP + Angle;
 326:Core/Src/main.c ****         IsInRange = 1;
 327:Core/Src/main.c ****       }
 328:Core/Src/main.c ****       else
 329:Core/Src/main.c ****       IsInRange = 0;
 330:Core/Src/main.c ****     }
 331:Core/Src/main.c ****     else
 332:Core/Src/main.c ****     {
 333:Core/Src/main.c ****       if(AbsoluteAngleCP - Angle > 0)
 334:Core/Src/main.c ****       {
 335:Core/Src/main.c ****         AbsoluteAngleCP = AbsoluteAngleCP - Angle;
 336:Core/Src/main.c ****         IsInRange = 1;
 337:Core/Src/main.c ****       }
 338:Core/Src/main.c ****       else
 339:Core/Src/main.c ****         IsInRange = 0;
 340:Core/Src/main.c ****     }
 341:Core/Src/main.c ****   }
 342:Core/Src/main.c **** }
 838              		.loc 1 342 1 view .LVU213
 839 0072 03B0     		add	sp, sp, #12
 840              	.LCFI16:
 841              		.cfi_remember_state
 842              		.cfi_def_cfa_offset 12
 843              		@ sp needed
 844 0074 30BD     		pop	{r4, r5, pc}
 845              	.LVL83:
 846              	.L61:
 847              	.LCFI17:
 848              		.cfi_restore_state
 315:Core/Src/main.c ****     }
 849              		.loc 1 315 7 is_stmt 1 view .LVU214
 315:Core/Src/main.c ****     }
 850              		.loc 1 315 17 is_stmt 0 view .LVU215
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 22


 851 0076 224B     		ldr	r3, .L65+12
 852 0078 0022     		movs	r2, #0
 853 007a 1A70     		strb	r2, [r3]
 854 007c F9E7     		b	.L43
 855              	.L44:
 318:Core/Src/main.c ****   {
 856              		.loc 1 318 8 is_stmt 1 view .LVU216
 318:Core/Src/main.c ****   {
 857              		.loc 1 318 11 is_stmt 0 view .LVU217
 858 007e 0222     		movs	r2, #2
 859 0080 2049     		ldr	r1, .L65+16
 860 0082 2046     		mov	r0, r4
 861 0084 FFF7FEFF 		bl	strncmp
 862              	.LVL84:
 318:Core/Src/main.c ****   {
 863              		.loc 1 318 10 view .LVU218
 864 0088 0028     		cmp	r0, #0
 865 008a F2D1     		bne	.L43
 321:Core/Src/main.c ****     {
 866              		.loc 1 321 5 is_stmt 1 view .LVU219
 321:Core/Src/main.c ****     {
 867              		.loc 1 321 7 is_stmt 0 view .LVU220
 868 008c CDB9     		cbnz	r5, .L51
 323:Core/Src/main.c ****       {
 869              		.loc 1 323 7 is_stmt 1 view .LVU221
 323:Core/Src/main.c ****       {
 870              		.loc 1 323 26 is_stmt 0 view .LVU222
 871 008e DDED017A 		vldr.32	s15, [sp, #4]	@ int
 872 0092 F8EEE77A 		vcvt.f32.s32	s15, s15
 873 0096 1C4B     		ldr	r3, .L65+20
 874 0098 93ED007A 		vldr.32	s14, [r3]
 875 009c 77EE877A 		vadd.f32	s15, s15, s14
 323:Core/Src/main.c ****       {
 876              		.loc 1 323 9 view .LVU223
 877 00a0 9FED167A 		vldr.32	s14, .L65+8
 878 00a4 F4EEC77A 		vcmpe.f32	s15, s14
 879 00a8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 880 00ac 05D5     		bpl	.L62
 325:Core/Src/main.c ****         IsInRange = 1;
 881              		.loc 1 325 9 is_stmt 1 view .LVU224
 325:Core/Src/main.c ****         IsInRange = 1;
 882              		.loc 1 325 25 is_stmt 0 view .LVU225
 883 00ae C3ED007A 		vstr.32	s15, [r3]
 326:Core/Src/main.c ****       }
 884              		.loc 1 326 9 is_stmt 1 view .LVU226
 326:Core/Src/main.c ****       }
 885              		.loc 1 326 19 is_stmt 0 view .LVU227
 886 00b2 134B     		ldr	r3, .L65+12
 887 00b4 0122     		movs	r2, #1
 888 00b6 1A70     		strb	r2, [r3]
 889 00b8 DBE7     		b	.L43
 890              	.L62:
 329:Core/Src/main.c ****     }
 891              		.loc 1 329 7 is_stmt 1 view .LVU228
 329:Core/Src/main.c ****     }
 892              		.loc 1 329 17 is_stmt 0 view .LVU229
 893 00ba 114B     		ldr	r3, .L65+12
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 23


 894 00bc 0022     		movs	r2, #0
 895 00be 1A70     		strb	r2, [r3]
 896 00c0 D7E7     		b	.L43
 897              	.L51:
 333:Core/Src/main.c ****       {
 898              		.loc 1 333 7 is_stmt 1 view .LVU230
 333:Core/Src/main.c ****       {
 899              		.loc 1 333 26 is_stmt 0 view .LVU231
 900 00c2 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 901 00c6 F8EEE77A 		vcvt.f32.s32	s15, s15
 902 00ca 0F4B     		ldr	r3, .L65+20
 903 00cc 93ED007A 		vldr.32	s14, [r3]
 904 00d0 77EE677A 		vsub.f32	s15, s14, s15
 333:Core/Src/main.c ****       {
 905              		.loc 1 333 9 view .LVU232
 906 00d4 F5EEC07A 		vcmpe.f32	s15, #0
 907 00d8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 908 00dc 05DD     		ble	.L63
 335:Core/Src/main.c ****         IsInRange = 1;
 909              		.loc 1 335 9 is_stmt 1 view .LVU233
 335:Core/Src/main.c ****         IsInRange = 1;
 910              		.loc 1 335 25 is_stmt 0 view .LVU234
 911 00de C3ED007A 		vstr.32	s15, [r3]
 336:Core/Src/main.c ****       }
 912              		.loc 1 336 9 is_stmt 1 view .LVU235
 336:Core/Src/main.c ****       }
 913              		.loc 1 336 19 is_stmt 0 view .LVU236
 914 00e2 074B     		ldr	r3, .L65+12
 915 00e4 0122     		movs	r2, #1
 916 00e6 1A70     		strb	r2, [r3]
 917 00e8 C3E7     		b	.L43
 918              	.L63:
 339:Core/Src/main.c ****     }
 919              		.loc 1 339 9 is_stmt 1 view .LVU237
 339:Core/Src/main.c ****     }
 920              		.loc 1 339 19 is_stmt 0 view .LVU238
 921 00ea 054B     		ldr	r3, .L65+12
 922 00ec 0022     		movs	r2, #0
 923 00ee 1A70     		strb	r2, [r3]
 924              		.loc 1 342 1 view .LVU239
 925 00f0 BFE7     		b	.L43
 926              	.L66:
 927 00f2 00BF     		.align	2
 928              	.L65:
 929 00f4 00000000 		.word	.LANCHOR1
 930 00f8 00000000 		.word	.LANCHOR5
 931 00fc 00006145 		.word	1163984896
 932 0100 00000000 		.word	.LANCHOR6
 933 0104 00000000 		.word	.LANCHOR2
 934 0108 00000000 		.word	.LANCHOR7
 935              		.cfi_endproc
 936              	.LFE143:
 938              		.section	.text.Error_Handler,"ax",%progbits
 939              		.align	1
 940              		.global	Error_Handler
 941              		.syntax unified
 942              		.thumb
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 24


 943              		.thumb_func
 945              	Error_Handler:
 946              	.LFB146:
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** 
 345:Core/Src/main.c **** /* USER CODE END PFP */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 348:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c **** /* USER CODE END 0 */
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** /**
 353:Core/Src/main.c ****   * @brief  The application entry point.
 354:Core/Src/main.c ****   * @retval int
 355:Core/Src/main.c ****   */
 356:Core/Src/main.c **** int main(void)
 357:Core/Src/main.c **** {
 358:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 359:Core/Src/main.c ****   /* USER CODE END 1 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 364:Core/Src/main.c ****   HAL_Init();
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****   /* USER CODE END Init */
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****   /* Configure the system clock */
 371:Core/Src/main.c ****   SystemClock_Config();
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* USER CODE END SysInit */
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* Initialize all configured peripherals */
 378:Core/Src/main.c ****   MX_GPIO_Init();
 379:Core/Src/main.c ****   MX_TIM1_Init();
 380:Core/Src/main.c ****   MX_USART2_UART_Init();
 381:Core/Src/main.c ****   MX_UART4_Init();
 382:Core/Src/main.c ****   MX_SPI1_Init();
 383:Core/Src/main.c ****   MX_TIM20_Init();
 384:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   // TMAG5170 configuration
 387:Core/Src/main.c ****   HallSensorSettings();
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, data, 6);
 391:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)"sterownik silnikami\r\n", strlen("sterownik silnikami\r\n")
 392:Core/Src/main.c ****   /* USER CODE END 2 */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* Infinite loop */
 395:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 396:Core/Src/main.c ****   while (1)
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 25


 397:Core/Src/main.c ****   {
 398:Core/Src/main.c ****     /* USER CODE END WHILE */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****   
 404:Core/Src/main.c ****   if(isInterrupt != wasInterrupt)
 405:Core/Src/main.c ****   {
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****     
 408:Core/Src/main.c ****     wasInterrupt = !wasInterrupt;
 409:Core/Src/main.c ****     directionRead(data);
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****     
 412:Core/Src/main.c ****     // save to "silnik" from data 'CS' or 'CP'
 413:Core/Src/main.c ****     strncpy(motor, data, 2);
 414:Core/Src/main.c ****     // save to "kat_obrotu" from data 
 415:Core/Src/main.c ****     strncpy(kat_obrotu, data + 3, 3);
 416:Core/Src/main.c ****     uint16_t kat_obrotu_zmienna = (uint16_t)atoi(kat_obrotu);
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****     CheckAbsoluteAngle(kat_obrotu_zmienna, directionOfRotation, motor);
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****     if(IsInRange == 1)
 421:Core/Src/main.c ****       motorRotation(motor, directionOfRotation, (uint16_t)kat_obrotu_zmienna);
 422:Core/Src/main.c ****     else
 423:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, (uint8_t*)"\r\nwrong angle!!!\r\nrange has been exceeded\r\n", str
 424:Core/Src/main.c ****     
 425:Core/Src/main.c ****     
 426:Core/Src/main.c ****     
 427:Core/Src/main.c ****     // AngleDifference = CheckAngle(FirstAngle, SecondAngle, kat_obrotu_zmienna, directionOfRotatio
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****     // uint16_t kat_dupa = 0;
 430:Core/Src/main.c ****     // kat_dupa = (uint16_t)AngleDifference;
 431:Core/Src/main.c ****     
 432:Core/Src/main.c ****     // char str1[8];
 433:Core/Src/main.c ****     // sprintf(str1, "%d", kat_dupa);
 434:Core/Src/main.c ****     // HAL_UART_Transmit(&huart2, str1, strlen(str1), HAL_MAX_DELAY);
 435:Core/Src/main.c **** 
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****   }
 438:Core/Src/main.c **** 
 439:Core/Src/main.c ****     //DisplayAngle();
 440:Core/Src/main.c ****     //HAL_Delay(1000);
 441:Core/Src/main.c **** 
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   }
 444:Core/Src/main.c ****   /* USER CODE END 3 */
 445:Core/Src/main.c **** }
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** /**
 448:Core/Src/main.c ****   * @brief System Clock Configuration
 449:Core/Src/main.c ****   * @retval None
 450:Core/Src/main.c ****   */
 451:Core/Src/main.c **** void SystemClock_Config(void)
 452:Core/Src/main.c **** {
 453:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 26


 454:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 457:Core/Src/main.c ****   */
 458:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 461:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 462:Core/Src/main.c ****   */
 463:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 464:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 465:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 466:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 467:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 468:Core/Src/main.c ****   {
 469:Core/Src/main.c ****     Error_Handler();
 470:Core/Src/main.c ****   }
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 473:Core/Src/main.c ****   */
 474:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 475:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 476:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 477:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 478:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 479:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 482:Core/Src/main.c ****   {
 483:Core/Src/main.c ****     Error_Handler();
 484:Core/Src/main.c ****   }
 485:Core/Src/main.c **** }
 486:Core/Src/main.c **** 
 487:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 488:Core/Src/main.c **** 
 489:Core/Src/main.c **** /* USER CODE END 4 */
 490:Core/Src/main.c **** 
 491:Core/Src/main.c **** /**
 492:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 493:Core/Src/main.c ****   * @retval None
 494:Core/Src/main.c ****   */
 495:Core/Src/main.c **** void Error_Handler(void)
 496:Core/Src/main.c **** {
 947              		.loc 1 496 1 is_stmt 1 view -0
 948              		.cfi_startproc
 949              		@ Volatile: function does not return.
 950              		@ args = 0, pretend = 0, frame = 0
 951              		@ frame_needed = 0, uses_anonymous_args = 0
 952              		@ link register save eliminated.
 497:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 498:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 499:Core/Src/main.c ****   __disable_irq();
 953              		.loc 1 499 3 view .LVU241
 954              	.LBB4:
 955              	.LBI4:
 956              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 27


   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 28


  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 29


 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 30


 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 957              		.loc 2 207 27 view .LVU242
 958              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 959              		.loc 2 209 3 view .LVU243
 960              		.syntax unified
 961              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 962 0000 72B6     		cpsid i
 963              	@ 0 "" 2
 964              		.thumb
 965              		.syntax unified
 966              	.L68:
 967              	.LBE5:
 968              	.LBE4:
 500:Core/Src/main.c ****   while (1)
 969              		.loc 1 500 3 discriminator 1 view .LVU244
 501:Core/Src/main.c ****   {
 502:Core/Src/main.c ****   }
 970              		.loc 1 502 3 discriminator 1 view .LVU245
 500:Core/Src/main.c ****   while (1)
 971              		.loc 1 500 9 discriminator 1 view .LVU246
 972 0002 FEE7     		b	.L68
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 31


 973              		.cfi_endproc
 974              	.LFE146:
 976              		.section	.text.SystemClock_Config,"ax",%progbits
 977              		.align	1
 978              		.global	SystemClock_Config
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
 983              	SystemClock_Config:
 984              	.LFB145:
 452:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 985              		.loc 1 452 1 view -0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 80
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989 0000 10B5     		push	{r4, lr}
 990              	.LCFI18:
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 4, -8
 993              		.cfi_offset 14, -4
 994 0002 94B0     		sub	sp, sp, #80
 995              	.LCFI19:
 996              		.cfi_def_cfa_offset 88
 453:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 997              		.loc 1 453 3 view .LVU248
 453:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 998              		.loc 1 453 22 is_stmt 0 view .LVU249
 999 0004 3822     		movs	r2, #56
 1000 0006 0021     		movs	r1, #0
 1001 0008 06A8     		add	r0, sp, #24
 1002 000a FFF7FEFF 		bl	memset
 1003              	.LVL85:
 454:Core/Src/main.c **** 
 1004              		.loc 1 454 3 is_stmt 1 view .LVU250
 454:Core/Src/main.c **** 
 1005              		.loc 1 454 22 is_stmt 0 view .LVU251
 1006 000e 0024     		movs	r4, #0
 1007 0010 0194     		str	r4, [sp, #4]
 1008 0012 0294     		str	r4, [sp, #8]
 1009 0014 0394     		str	r4, [sp, #12]
 1010 0016 0494     		str	r4, [sp, #16]
 1011 0018 0594     		str	r4, [sp, #20]
 458:Core/Src/main.c **** 
 1012              		.loc 1 458 3 is_stmt 1 view .LVU252
 1013 001a 4FF40070 		mov	r0, #512
 1014 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 1015              	.LVL86:
 463:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1016              		.loc 1 463 3 view .LVU253
 463:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1017              		.loc 1 463 36 is_stmt 0 view .LVU254
 1018 0022 0223     		movs	r3, #2
 1019 0024 0693     		str	r3, [sp, #24]
 464:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1020              		.loc 1 464 3 is_stmt 1 view .LVU255
 464:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1021              		.loc 1 464 30 is_stmt 0 view .LVU256
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 32


 1022 0026 4FF48073 		mov	r3, #256
 1023 002a 0993     		str	r3, [sp, #36]
 465:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1024              		.loc 1 465 3 is_stmt 1 view .LVU257
 465:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1025              		.loc 1 465 41 is_stmt 0 view .LVU258
 1026 002c 4023     		movs	r3, #64
 1027 002e 0A93     		str	r3, [sp, #40]
 466:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1028              		.loc 1 466 3 is_stmt 1 view .LVU259
 466:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1029              		.loc 1 466 34 is_stmt 0 view .LVU260
 1030 0030 0D94     		str	r4, [sp, #52]
 467:Core/Src/main.c ****   {
 1031              		.loc 1 467 3 is_stmt 1 view .LVU261
 467:Core/Src/main.c ****   {
 1032              		.loc 1 467 7 is_stmt 0 view .LVU262
 1033 0032 06A8     		add	r0, sp, #24
 1034 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1035              	.LVL87:
 467:Core/Src/main.c ****   {
 1036              		.loc 1 467 6 view .LVU263
 1037 0038 68B9     		cbnz	r0, .L73
 474:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1038              		.loc 1 474 3 is_stmt 1 view .LVU264
 474:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1039              		.loc 1 474 31 is_stmt 0 view .LVU265
 1040 003a 0F23     		movs	r3, #15
 1041 003c 0193     		str	r3, [sp, #4]
 476:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1042              		.loc 1 476 3 is_stmt 1 view .LVU266
 476:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1043              		.loc 1 476 34 is_stmt 0 view .LVU267
 1044 003e 0123     		movs	r3, #1
 1045 0040 0293     		str	r3, [sp, #8]
 477:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1046              		.loc 1 477 3 is_stmt 1 view .LVU268
 477:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1047              		.loc 1 477 35 is_stmt 0 view .LVU269
 1048 0042 0021     		movs	r1, #0
 1049 0044 0391     		str	r1, [sp, #12]
 478:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1050              		.loc 1 478 3 is_stmt 1 view .LVU270
 478:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1051              		.loc 1 478 36 is_stmt 0 view .LVU271
 1052 0046 0491     		str	r1, [sp, #16]
 479:Core/Src/main.c **** 
 1053              		.loc 1 479 3 is_stmt 1 view .LVU272
 479:Core/Src/main.c **** 
 1054              		.loc 1 479 36 is_stmt 0 view .LVU273
 1055 0048 0591     		str	r1, [sp, #20]
 481:Core/Src/main.c ****   {
 1056              		.loc 1 481 3 is_stmt 1 view .LVU274
 481:Core/Src/main.c ****   {
 1057              		.loc 1 481 7 is_stmt 0 view .LVU275
 1058 004a 01A8     		add	r0, sp, #4
 1059 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 33


 1060              	.LVL88:
 481:Core/Src/main.c ****   {
 1061              		.loc 1 481 6 view .LVU276
 1062 0050 18B9     		cbnz	r0, .L74
 485:Core/Src/main.c **** 
 1063              		.loc 1 485 1 view .LVU277
 1064 0052 14B0     		add	sp, sp, #80
 1065              	.LCFI20:
 1066              		.cfi_remember_state
 1067              		.cfi_def_cfa_offset 8
 1068              		@ sp needed
 1069 0054 10BD     		pop	{r4, pc}
 1070              	.L73:
 1071              	.LCFI21:
 1072              		.cfi_restore_state
 469:Core/Src/main.c ****   }
 1073              		.loc 1 469 5 is_stmt 1 view .LVU278
 1074 0056 FFF7FEFF 		bl	Error_Handler
 1075              	.LVL89:
 1076              	.L74:
 483:Core/Src/main.c ****   }
 1077              		.loc 1 483 5 view .LVU279
 1078 005a FFF7FEFF 		bl	Error_Handler
 1079              	.LVL90:
 1080              		.cfi_endproc
 1081              	.LFE145:
 1083              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1084              		.align	2
 1085              	.LC4:
 1086 0000 73746572 		.ascii	"sterownik silnikami\015\012\000"
 1086      6F776E69 
 1086      6B207369 
 1086      6C6E696B 
 1086      616D690D 
 1087 0016 0000     		.align	2
 1088              	.LC5:
 1089 0018 0D0A7772 		.ascii	"\015\012wrong angle!!!\015\012range has been exceed"
 1089      6F6E6720 
 1089      616E676C 
 1089      65212121 
 1089      0D0A7261 
 1090 003f 65640D0A 		.ascii	"ed\015\012\000"
 1090      00
 1091              		.section	.text.main,"ax",%progbits
 1092              		.align	1
 1093              		.global	main
 1094              		.syntax unified
 1095              		.thumb
 1096              		.thumb_func
 1098              	main:
 1099              	.LFB144:
 357:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1100              		.loc 1 357 1 view -0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 34


 1105              	.LCFI22:
 1106              		.cfi_def_cfa_offset 16
 1107              		.cfi_offset 4, -16
 1108              		.cfi_offset 5, -12
 1109              		.cfi_offset 6, -8
 1110              		.cfi_offset 14, -4
 364:Core/Src/main.c **** 
 1111              		.loc 1 364 3 view .LVU281
 1112 0002 FFF7FEFF 		bl	HAL_Init
 1113              	.LVL91:
 371:Core/Src/main.c **** 
 1114              		.loc 1 371 3 view .LVU282
 1115 0006 FFF7FEFF 		bl	SystemClock_Config
 1116              	.LVL92:
 378:Core/Src/main.c ****   MX_TIM1_Init();
 1117              		.loc 1 378 3 view .LVU283
 1118 000a FFF7FEFF 		bl	MX_GPIO_Init
 1119              	.LVL93:
 379:Core/Src/main.c ****   MX_USART2_UART_Init();
 1120              		.loc 1 379 3 view .LVU284
 1121 000e FFF7FEFF 		bl	MX_TIM1_Init
 1122              	.LVL94:
 380:Core/Src/main.c ****   MX_UART4_Init();
 1123              		.loc 1 380 3 view .LVU285
 1124 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 1125              	.LVL95:
 381:Core/Src/main.c ****   MX_SPI1_Init();
 1126              		.loc 1 381 3 view .LVU286
 1127 0016 FFF7FEFF 		bl	MX_UART4_Init
 1128              	.LVL96:
 382:Core/Src/main.c ****   MX_TIM20_Init();
 1129              		.loc 1 382 3 view .LVU287
 1130 001a FFF7FEFF 		bl	MX_SPI1_Init
 1131              	.LVL97:
 383:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1132              		.loc 1 383 3 view .LVU288
 1133 001e FFF7FEFF 		bl	MX_TIM20_Init
 1134              	.LVL98:
 387:Core/Src/main.c **** 
 1135              		.loc 1 387 3 view .LVU289
 1136 0022 FFF7FEFF 		bl	HallSensorSettings
 1137              	.LVL99:
 390:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)"sterownik silnikami\r\n", strlen("sterownik silnikami\r\n")
 1138              		.loc 1 390 3 view .LVU290
 1139 0026 214C     		ldr	r4, .L81
 1140 0028 0622     		movs	r2, #6
 1141 002a 2149     		ldr	r1, .L81+4
 1142 002c 2046     		mov	r0, r4
 1143 002e FFF7FEFF 		bl	HAL_UART_Receive_IT
 1144              	.LVL100:
 391:Core/Src/main.c ****   /* USER CODE END 2 */
 1145              		.loc 1 391 3 view .LVU291
 1146 0032 C823     		movs	r3, #200
 1147 0034 1522     		movs	r2, #21
 1148 0036 1F49     		ldr	r1, .L81+8
 1149 0038 2046     		mov	r0, r4
 1150 003a FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 35


 1151              	.LVL101:
 1152 003e 05E0     		b	.L77
 1153              	.LVL102:
 1154              	.L78:
 1155              	.LBB6:
 423:Core/Src/main.c ****     
 1156              		.loc 1 423 7 view .LVU292
 1157 0040 C823     		movs	r3, #200
 1158 0042 2B22     		movs	r2, #43
 1159 0044 1C49     		ldr	r1, .L81+12
 1160 0046 1948     		ldr	r0, .L81
 1161 0048 FFF7FEFF 		bl	HAL_UART_Transmit
 1162              	.LVL103:
 1163              	.L77:
 423:Core/Src/main.c ****     
 1164              		.loc 1 423 7 is_stmt 0 view .LVU293
 1165              	.LBE6:
 396:Core/Src/main.c ****   {
 1166              		.loc 1 396 3 is_stmt 1 view .LVU294
 404:Core/Src/main.c ****   {
 1167              		.loc 1 404 3 view .LVU295
 404:Core/Src/main.c ****   {
 1168              		.loc 1 404 18 is_stmt 0 view .LVU296
 1169 004c 1B4B     		ldr	r3, .L81+16
 1170 004e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1171 0050 1B4B     		ldr	r3, .L81+20
 1172 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 404:Core/Src/main.c ****   {
 1173              		.loc 1 404 5 view .LVU297
 1174 0054 9A42     		cmp	r2, r3
 1175 0056 F9D0     		beq	.L77
 1176              	.LBB7:
 408:Core/Src/main.c ****     directionRead(data);
 1177              		.loc 1 408 5 is_stmt 1 view .LVU298
 1178 0058 83F00103 		eor	r3, r3, #1
 408:Core/Src/main.c ****     directionRead(data);
 1179              		.loc 1 408 18 is_stmt 0 view .LVU299
 1180 005c 184A     		ldr	r2, .L81+20
 1181 005e 1370     		strb	r3, [r2]
 409:Core/Src/main.c **** 
 1182              		.loc 1 409 5 is_stmt 1 view .LVU300
 1183 0060 134C     		ldr	r4, .L81+4
 1184 0062 2046     		mov	r0, r4
 1185 0064 FFF7FEFF 		bl	directionRead
 1186              	.LVL104:
 413:Core/Src/main.c ****     // save to "kat_obrotu" from data 
 1187              		.loc 1 413 5 view .LVU301
 1188 0068 164D     		ldr	r5, .L81+24
 1189 006a 0222     		movs	r2, #2
 1190 006c 2146     		mov	r1, r4
 1191 006e 2846     		mov	r0, r5
 1192 0070 FFF7FEFF 		bl	strncpy
 1193              	.LVL105:
 415:Core/Src/main.c ****     uint16_t kat_obrotu_zmienna = (uint16_t)atoi(kat_obrotu);
 1194              		.loc 1 415 5 view .LVU302
 1195 0074 144E     		ldr	r6, .L81+28
 1196 0076 0322     		movs	r2, #3
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 36


 1197 0078 A118     		adds	r1, r4, r2
 1198 007a 3046     		mov	r0, r6
 1199 007c FFF7FEFF 		bl	strncpy
 1200              	.LVL106:
 416:Core/Src/main.c **** 
 1201              		.loc 1 416 5 view .LVU303
 416:Core/Src/main.c **** 
 1202              		.loc 1 416 45 is_stmt 0 view .LVU304
 1203 0080 3046     		mov	r0, r6
 1204 0082 FFF7FEFF 		bl	atoi
 1205              	.LVL107:
 416:Core/Src/main.c **** 
 1206              		.loc 1 416 14 view .LVU305
 1207 0086 84B2     		uxth	r4, r0
 1208              	.LVL108:
 418:Core/Src/main.c **** 
 1209              		.loc 1 418 5 is_stmt 1 view .LVU306
 1210 0088 2A46     		mov	r2, r5
 1211 008a 104B     		ldr	r3, .L81+32
 1212 008c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1213 008e 2046     		mov	r0, r4
 1214 0090 FFF7FEFF 		bl	CheckAbsoluteAngle
 1215              	.LVL109:
 420:Core/Src/main.c ****       motorRotation(motor, directionOfRotation, (uint16_t)kat_obrotu_zmienna);
 1216              		.loc 1 420 5 view .LVU307
 420:Core/Src/main.c ****       motorRotation(motor, directionOfRotation, (uint16_t)kat_obrotu_zmienna);
 1217              		.loc 1 420 18 is_stmt 0 view .LVU308
 1218 0094 0E4B     		ldr	r3, .L81+36
 1219 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 420:Core/Src/main.c ****       motorRotation(motor, directionOfRotation, (uint16_t)kat_obrotu_zmienna);
 1220              		.loc 1 420 7 view .LVU309
 1221 0098 012B     		cmp	r3, #1
 1222 009a D1D1     		bne	.L78
 421:Core/Src/main.c ****     else
 1223              		.loc 1 421 7 is_stmt 1 view .LVU310
 1224 009c 2246     		mov	r2, r4
 1225 009e 0B4B     		ldr	r3, .L81+32
 1226 00a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1227 00a2 2846     		mov	r0, r5
 1228 00a4 FFF7FEFF 		bl	motorRotation
 1229              	.LVL110:
 1230 00a8 D0E7     		b	.L77
 1231              	.L82:
 1232 00aa 00BF     		.align	2
 1233              	.L81:
 1234 00ac 00000000 		.word	huart2
 1235 00b0 00000000 		.word	.LANCHOR4
 1236 00b4 00000000 		.word	.LC4
 1237 00b8 18000000 		.word	.LC5
 1238 00bc 00000000 		.word	.LANCHOR3
 1239 00c0 00000000 		.word	.LANCHOR8
 1240 00c4 00000000 		.word	.LANCHOR9
 1241 00c8 00000000 		.word	.LANCHOR10
 1242 00cc 00000000 		.word	.LANCHOR0
 1243 00d0 00000000 		.word	.LANCHOR6
 1244              	.LBE7:
 1245              		.cfi_endproc
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 37


 1246              	.LFE144:
 1248              		.global	IsInRange
 1249              		.global	WhichRotation
 1250              		.global	AngleDifference
 1251              		.global	SecondAngle
 1252              		.global	FirstAngle
 1253              		.global	motor
 1254              		.global	kat_obrotu
 1255              		.global	directionOfRotation
 1256              		.global	wasInterrupt
 1257              		.global	isInterrupt
 1258              		.global	AbsoluteAngleCP
 1259              		.global	AbsoluteAngleCS
 1260              		.global	motorCP
 1261              		.global	motorCS
 1262              		.global	data
 1263              		.section	.bss.AbsoluteAngleCP,"aw",%nobits
 1264              		.align	2
 1265              		.set	.LANCHOR7,. + 0
 1268              	AbsoluteAngleCP:
 1269 0000 00000000 		.space	4
 1270              		.section	.bss.AbsoluteAngleCS,"aw",%nobits
 1271              		.align	2
 1272              		.set	.LANCHOR5,. + 0
 1275              	AbsoluteAngleCS:
 1276 0000 00000000 		.space	4
 1277              		.section	.bss.AngleDifference,"aw",%nobits
 1278              		.align	2
 1281              	AngleDifference:
 1282 0000 00000000 		.space	4
 1283              		.section	.bss.FirstAngle,"aw",%nobits
 1284              		.align	2
 1287              	FirstAngle:
 1288 0000 00000000 		.space	4
 1289              		.section	.bss.IsInRange,"aw",%nobits
 1290              		.set	.LANCHOR6,. + 0
 1293              	IsInRange:
 1294 0000 00       		.space	1
 1295              		.section	.bss.SecondAngle,"aw",%nobits
 1296              		.align	2
 1299              	SecondAngle:
 1300 0000 00000000 		.space	4
 1301              		.section	.bss.WhichRotation,"aw",%nobits
 1304              	WhichRotation:
 1305 0000 00       		.space	1
 1306              		.section	.bss.data,"aw",%nobits
 1307              		.align	2
 1308              		.set	.LANCHOR4,. + 0
 1311              	data:
 1312 0000 00000000 		.space	6
 1312      0000
 1313              		.section	.bss.directionOfRotation,"aw",%nobits
 1314              		.set	.LANCHOR0,. + 0
 1317              	directionOfRotation:
 1318 0000 00       		.space	1
 1319              		.section	.bss.isInterrupt,"aw",%nobits
 1320              		.set	.LANCHOR3,. + 0
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 38


 1323              	isInterrupt:
 1324 0000 00       		.space	1
 1325              		.section	.bss.kat_obrotu,"aw",%nobits
 1326              		.align	2
 1327              		.set	.LANCHOR10,. + 0
 1330              	kat_obrotu:
 1331 0000 000000   		.space	3
 1332              		.section	.bss.motor,"aw",%nobits
 1333              		.align	2
 1334              		.set	.LANCHOR9,. + 0
 1337              	motor:
 1338 0000 0000     		.space	2
 1339              		.section	.bss.wasInterrupt,"aw",%nobits
 1340              		.set	.LANCHOR8,. + 0
 1343              	wasInterrupt:
 1344 0000 00       		.space	1
 1345              		.section	.data.motorCP,"aw"
 1346              		.align	2
 1347              		.set	.LANCHOR2,. + 0
 1350              	motorCP:
 1351 0000 4350     		.ascii	"CP"
 1352              		.section	.data.motorCS,"aw"
 1353              		.align	2
 1354              		.set	.LANCHOR1,. + 0
 1357              	motorCS:
 1358 0000 4353     		.ascii	"CS"
 1359              		.text
 1360              	.Letext0:
 1361              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1362              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1363              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g491xx.h"
 1364              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1365              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 1366              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 1367              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 1368              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 1369              		.file 11 "Core/Inc/tim.h"
 1370              		.file 12 "Core/Inc/usart.h"
 1371              		.file 13 "Core/Inc/tmag5170.h"
 1372              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 1373              		.file 15 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 1374              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 1375              		.file 17 "Core/Inc/gpio.h"
 1376              		.file 18 "Core/Inc/spi.h"
 1377              		.file 19 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 1378              		.file 20 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 1379              		.file 21 "<built-in>"
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 39


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:20     .text.PWM_steering_period:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:26     .text.PWM_steering_period:00000000 PWM_steering_period
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:86     .text.PWM_steering_period:00000048 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:96     .text.angleToSteps:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:102    .text.angleToSteps:00000000 angleToSteps
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:141    .text.angleToSteps:00000028 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:147    .text.directionRead:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:153    .text.directionRead:00000000 directionRead
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:201    .text.directionRead:0000001c $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:206    .text.motorRotation:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:212    .text.motorRotation:00000000 motorRotation
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:331    .text.motorRotation:00000088 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:340    .text.CheckAngle:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:346    .text.CheckAngle:00000000 CheckAngle
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:413    .text.CheckAngle:0000002c $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:418    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:424    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:459    .text.HAL_UART_RxCpltCallback:00000018 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:466    .text.HallSensorSettings:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:472    .text.HallSensorSettings:00000000 HallSensorSettings
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:581    .rodata.DisplayAngle.str1.4:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:594    .text.DisplayAngle:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:600    .text.DisplayAngle:00000000 DisplayAngle
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:731    .text.DisplayAngle:000000ac $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:742    .text.CheckAbsoluteAngle:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:748    .text.CheckAbsoluteAngle:00000000 CheckAbsoluteAngle
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:929    .text.CheckAbsoluteAngle:000000f4 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:939    .text.Error_Handler:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:945    .text.Error_Handler:00000000 Error_Handler
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:977    .text.SystemClock_Config:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:983    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1084   .rodata.main.str1.4:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1092   .text.main:00000000 $t
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1098   .text.main:00000000 main
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1234   .text.main:000000ac $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1293   .bss.IsInRange:00000000 IsInRange
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1304   .bss.WhichRotation:00000000 WhichRotation
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1281   .bss.AngleDifference:00000000 AngleDifference
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1299   .bss.SecondAngle:00000000 SecondAngle
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1287   .bss.FirstAngle:00000000 FirstAngle
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1337   .bss.motor:00000000 motor
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1330   .bss.kat_obrotu:00000000 kat_obrotu
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1317   .bss.directionOfRotation:00000000 directionOfRotation
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1343   .bss.wasInterrupt:00000000 wasInterrupt
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1323   .bss.isInterrupt:00000000 isInterrupt
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1268   .bss.AbsoluteAngleCP:00000000 AbsoluteAngleCP
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1275   .bss.AbsoluteAngleCS:00000000 AbsoluteAngleCS
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1350   .data.motorCP:00000000 motorCP
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1357   .data.motorCS:00000000 motorCS
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1311   .bss.data:00000000 data
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1264   .bss.AbsoluteAngleCP:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1271   .bss.AbsoluteAngleCS:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1278   .bss.AngleDifference:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1284   .bss.FirstAngle:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1294   .bss.IsInRange:00000000 $d
ARM GAS  C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s 			page 40


C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1296   .bss.SecondAngle:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1305   .bss.WhichRotation:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1307   .bss.data:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1318   .bss.directionOfRotation:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1324   .bss.isInterrupt:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1326   .bss.kat_obrotu:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1333   .bss.motor:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1344   .bss.wasInterrupt:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1346   .data.motorCP:00000000 $d
C:\Users\jakub\AppData\Local\Temp\ccFBIxXD.s:1353   .data.motorCS:00000000 $d

UNDEFINED SYMBOLS
HAL_Delay
htim1
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2f
strncmp
HAL_GPIO_WritePin
HAL_TIM_PWM_Start
HAL_TIM_PWM_Stop
htim20
HAL_UART_Receive_IT
huart2
DisableCRC
TMAG5170_dev_conf_settings
TMAG5170_sens_conf_settings
TMAG5170_sys_conf_settings
TMAG5170_al_conf_settings
GetAngle
HAL_UART_Transmit
sprintf
strlen
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM1_Init
MX_USART2_UART_Init
MX_UART4_Init
MX_SPI1_Init
MX_TIM20_Init
strncpy
atoi
